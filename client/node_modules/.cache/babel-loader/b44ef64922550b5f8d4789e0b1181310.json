{"ast":null,"code":"import _slicedToArray from\"C:/Users/ahmed/Documents/mern-expense-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import{connect}from'react-redux';import{Button,FormGroup,Label,Input,FormFeedback,Alert}from'reactstrap';import{useFormik}from'formik';import{Link}from'react-router-dom';import*as Yup from'yup';import{signUp,signIn,resetSignup}from'../actions/auth_actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function useDidUpdate(callback){var hasMount=useRef(false);useEffect(function(){if(hasMount.current){callback();}else{hasMount.current=true;}});}var SignupPage=function SignupPage(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),loginInfo=_useState2[0],setLoginInfo=_useState2[1];useDidUpdate(function(){var signedUp=props.signedUp,resetSignup=props.resetSignup,signIn=props.signIn,isAuth=props.isAuth;if(signedUp){resetSignup();signIn(loginInfo);}if(isAuth){props.history.push('/');}});var validationSchema=Yup.object({name:Yup.string().required(\"Enter your name\"),email:Yup.string().email(\"Enter a valid email\").required(\"Enter your email\"),password:Yup.string().min(6,\"Password must contain at least 6 charcters\").required(\"Enter a password\")});function handleSubmit(){props.signUp(formik.values);}var formik=useFormik({initialValues:{name:\"\",email:\"\",password:\"\"},onSubmit:function onSubmit(){handleSubmit();setLoginInfo({email:formik.values.email,password:formik.values.password});formik.resetForm();},validationSchema:validationSchema});var renderError=function renderError(){var error=props.error;if(error){return/*#__PURE__*/_jsx(Alert,{color:\"danger\",children:error});}};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'block',padding:20},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create a new account\"}),/*#__PURE__*/_jsx(\"hr\",{}),renderError(),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Input,{placeholder:'Enter your full name',valid:!formik.errors.name&&formik.touched.name,invalid:formik.errors.name&&formik.touched.name,name:\"name\",type:\"text\",onBlur:formik.handleBlur,value:formik.values.name,onChange:formik.handleChange('name')}),/*#__PURE__*/_jsxs(FormFeedback,{children:[formik.errors.name,\" \"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Input,{placeholder:'Enter your email',valid:!formik.errors.email&&formik.touched.email,invalid:formik.errors.email&&formik.touched.email,name:\"email\",type:\"email\",onBlur:formik.handleBlur,value:formik.values.email,onChange:formik.handleChange('email')}),/*#__PURE__*/_jsxs(FormFeedback,{children:[formik.errors.email,\" \"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:'Enter a passwoord',valid:!formik.errors.password&&formik.touched.password,invalid:formik.errors.password&&formik.touched.password,name:\"password\",type:\"password\",onBlur:formik.handleBlur,value:formik.values.password,onChange:formik.handleChange('password')}),/*#__PURE__*/_jsxs(FormFeedback,{children:[formik.errors.password,\" \"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",type:\"submit\",onClick:formik.handleSubmit,disabled:!formik.isValid||formik.isSubmitting,children:\" Sign Up \"}),/*#__PURE__*/_jsx(\"br\",{}),\"Have an account ? \",/*#__PURE__*/_jsx(Link,{to:'/login',children:\"Login\"})]})]})]});};var mapStateToProps=function mapStateToProps(_ref){var auth=_ref.auth;return{error:auth.error,signedUp:auth.signedUp,attempting:auth.attempting,isAuth:auth.isAuth};};var Signup=connect(mapStateToProps,{signUp:signUp,resetSignup:resetSignup,signIn:signIn})(SignupPage);export{Signup};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Signup.js"],"names":["React","useEffect","useRef","useState","connect","Button","FormGroup","Label","Input","FormFeedback","Alert","useFormik","Link","Yup","signUp","signIn","resetSignup","useDidUpdate","callback","hasMount","current","SignupPage","props","loginInfo","setLoginInfo","signedUp","isAuth","history","push","validationSchema","object","name","string","required","email","password","min","handleSubmit","formik","values","initialValues","onSubmit","resetForm","renderError","error","display","padding","errors","touched","handleBlur","handleChange","isValid","isSubmitting","mapStateToProps","auth","attempting","Signup"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport { signUp, signIn, resetSignup } from '../actions/auth_actions'\r\n\r\n\r\nfunction useDidUpdate(callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n        \r\n        if (hasMount.current) {\r\n            callback()\r\n        } else {\r\n            hasMount.current = true\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst SignupPage = (props) => {\r\n\r\n    const [loginInfo, setLoginInfo] = useState({})\r\n\r\n    useDidUpdate(() => {\r\n        const { signedUp, resetSignup, signIn, isAuth } = props\r\n        if (signedUp) {\r\n            resetSignup()\r\n            signIn(loginInfo)\r\n        }\r\n        if (isAuth) { props.history.push('/') }\r\n\r\n    })\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string()\r\n            .required(\"Enter your name\"),\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Enter your email\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 6 charcters\")\r\n            .required(\"Enter a password\")\r\n    })\r\n    function handleSubmit() {\r\n        props.signUp(formik.values)\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n\r\n        onSubmit: () => {\r\n            handleSubmit()\r\n            setLoginInfo({ email: formik.values.email, password: formik.values.password })\r\n            formik.resetForm()\r\n\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const renderError = () => {\r\n        const { error } = props\r\n        if (error) {\r\n            return (\r\n                <Alert color=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Create a new account</h3>\r\n            <hr />\r\n            {renderError()}\r\n            <div>\r\n                <FormGroup>\r\n                    <Label>Name</Label>\r\n                    <Input\r\n                        placeholder={'Enter your full name'}\r\n                        valid={!formik.errors.name && formik.touched.name}\r\n                        invalid={formik.errors.name && formik.touched.name}\r\n                        name='name'\r\n                        type='text'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange('name')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.name} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                        placeholder={'Enter your email'}\r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                        placeholder={'Enter a passwoord'}\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.password} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign Up </Button>\r\n                    <br />\r\n                    Have an account ? <Link to={'/login'}>Login</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        error: auth.error,\r\n        signedUp: auth.signedUp,\r\n        attempting: auth.attempting,\r\n        isAuth: auth.isAuth\r\n    };\r\n};\r\n\r\nconst Signup = connect(\r\n    mapStateToProps,\r\n    { signUp, resetSignup, signIn }\r\n)(SignupPage);\r\nexport { Signup };"]},"metadata":{},"sourceType":"module"}
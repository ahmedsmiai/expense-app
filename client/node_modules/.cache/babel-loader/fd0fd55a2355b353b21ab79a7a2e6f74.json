{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{Button,FormGroup,Label,Input,FormFeedback,Alert}from'reactstrap';import{useFormik}from'formik';import{connect}from'react-redux';import{Link}from'react-router-dom';import*as Yup from'yup';import{signIn}from'../actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function useDidUpdate(callback){var hasMount=useRef(false);useEffect(function(){if(hasMount.current){callback();}else{hasMount.current=true;}});}function LoginPage(props){useDidUpdate(function(){var isAuth=props.isAuth;if(isAuth){props.history.push('/');}});var validationSchema=Yup.object({email:Yup.string().email(\"Enter a valid email\").required(\"Email is required\"),password:Yup.string().min(6,\"Password must contain at least 8 charcters\").required(\"Enter your password\")});function handleSubmit(){props.signIn(formik.values);console.log(formik.values);}var formik=useFormik({initialValues:{email:\"\",password:\"\"},onSubmit:function onSubmit(){handleSubmit();formik.resetForm();},validationSchema:validationSchema});var renderError=function renderError(){var error=props.error;if(error){return/*#__PURE__*/_jsx(Alert,{color:\"danger\",children:error});}};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'block',padding:20},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Sign in to your account\"}),/*#__PURE__*/_jsx(\"hr\",{}),renderError(),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Input,{valid:!formik.errors.email&&formik.touched.email,invalid:formik.errors.email&&formik.touched.email,name:\"email\",type:\"email\",onBlur:formik.handleBlur,value:formik.values.email,onChange:formik.handleChange('email')}),/*#__PURE__*/_jsx(FormFeedback,{children:formik.errors.email})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{valid:!formik.errors.password&&formik.touched.password,invalid:formik.errors.password&&formik.touched.password,name:\"password\",type:\"password\",onBlur:formik.handleBlur,value:formik.values.password,onChange:formik.handleChange('password')}),/*#__PURE__*/_jsx(FormFeedback,{children:formik.errors.password})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",type:\"submit\",onClick:formik.handleSubmit,disabled:!formik.isValid||formik.isSubmitting,children:\" Sign In\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Do not have an account ? \",/*#__PURE__*/_jsx(Link,{to:'/signup',children:\"Sign up here\"})]})]})]});}var mapStateToProps=function mapStateToProps(_ref){var auth=_ref.auth;return{attempting:auth.attempting,error:auth.error,isAuth:auth.isAuth};};var Login=connect(mapStateToProps,{signIn:signIn})(LoginPage);export{Login};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Login.js"],"names":["React","useEffect","useRef","Button","FormGroup","Label","Input","FormFeedback","Alert","useFormik","connect","Link","Yup","signIn","useDidUpdate","callback","hasMount","current","LoginPage","props","isAuth","history","push","validationSchema","object","email","string","required","password","min","handleSubmit","formik","values","console","log","initialValues","onSubmit","resetForm","renderError","error","display","padding","errors","touched","handleBlur","handleChange","isValid","isSubmitting","mapStateToProps","auth","attempting","Login"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport { signIn } from '../actions'\r\n\r\nfunction useDidUpdate(callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n        if (hasMount.current) {\r\n            callback()\r\n        } else {\r\n            hasMount.current = true\r\n        }\r\n    })\r\n}\r\n\r\nfunction LoginPage(props) {\r\n\r\n\r\n    useDidUpdate(() => {\r\n        const { isAuth } = props\r\n        if (isAuth) {\r\n            props.history.push('/')\r\n        }\r\n    })\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Email is required\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 8 charcters\")\r\n            .required(\"Enter your password\")\r\n    })\r\n\r\n    function handleSubmit() {\r\n        props.signIn(formik.values)\r\n        console.log(formik.values)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        onSubmit: () => {\r\n            handleSubmit()\r\n            formik.resetForm()\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const renderError = () => {\r\n        const { error } = props\r\n        if (error) {\r\n            return (\r\n                <Alert color=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Sign in to your account</h3>\r\n            <hr />\r\n            {renderError()}\r\n            <div >\r\n                <FormGroup  >\r\n                    <Label>Email</Label>\r\n                    <Input\r\n\r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email}</FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                 \r\n                        <FormFeedback>{formik.errors.password}</FormFeedback> \r\n             \r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign In\r\n                    </Button>\r\n                    <br />\r\n                    Do not have an account ? <Link to={'/signup'}>Sign up here</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        attempting: auth.attempting,\r\n        error: auth.error,\r\n        isAuth: auth.isAuth\r\n    }\r\n}\r\nconst Login = connect(mapStateToProps, { signIn })(LoginPage)\r\nexport { Login }\r\n"]},"metadata":{},"sourceType":"module"}
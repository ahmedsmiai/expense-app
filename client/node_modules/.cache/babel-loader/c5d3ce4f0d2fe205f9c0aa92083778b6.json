{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\mern-expense-app\\\\client\\\\src\\\\components\\\\AddForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport { saveExpense } from '../actions';\nimport { FloatButton } from './FloatButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddFormComponent(props) {\n  _s();\n\n  const hasMount = useRef(true);\n  useEffect(() => {\n    if (hasMount.current) {\n      const {\n        saved\n      } = props;\n\n      if (saved) {\n        toggle();\n      }\n    } else {\n      hasMount.current = true;\n    }\n  });\n\n  function submit(values, bag) {\n    props.saveExpense(values);\n    bag = bag;\n  }\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const now = moment().format('YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FloatButton, {\n      onClick: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Add expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            amount: '',\n            created: now\n          },\n          onSubmit: submit,\n          validationSchema: Yup.object().shape({\n            amount: Yup.number().min(1).required(),\n            created: Yup.date().required()\n          }),\n          children: ({\n            errors,\n            touched,\n            handleBlur,\n            handleChange,\n            values,\n            isValid,\n            isSubmitting,\n            handleSubmit\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                invalid: errors.amount && touched.amount,\n                name: \"amount\",\n                value: values.amount,\n                type: \"number\",\n                placeholder: \"Expense amount\",\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), errors.amount && touched.amount && /*#__PURE__*/_jsxDEV(FormFeedback, {\n                children: errors.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                invalid: errors.created && touched.created,\n                name: \"created\",\n                value: values.created,\n                type: \"date\",\n                placeholder: \"expense amount\",\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), errors.created && touched.created && /*#__PURE__*/_jsxDEV(FormFeedback, {\n                children: errors.created\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: handleSubmit,\n              disabled: !isValid || isSubmitting,\n              children: \" Save \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddFormComponent, \"EfGsQ3IIGoPM4IyuOU2WxZWwP24=\");\n\n_c = AddFormComponent;\n\nconst mapStateToProps = ({\n  expense\n}) => {\n  return {\n    saved: expense.saved\n  };\n};\n\nconst AddForm = connect(mapStateToProps, {\n  saveExpense\n})(AddFormComponent);\nexport { AddForm };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFormComponent\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/components/AddForm.js"],"names":["React","useState","useEffect","useRef","connect","Button","Modal","ModalHeader","ModalBody","Input","FormGroup","Label","FormFeedback","Formik","moment","Yup","saveExpense","FloatButton","AddFormComponent","props","hasMount","current","saved","toggle","submit","values","bag","modal","setModal","now","format","amount","created","object","shape","number","min","required","date","errors","touched","handleBlur","handleChange","isValid","isSubmitting","handleSubmit","mapStateToProps","expense","AddForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { Formik } from 'formik'\r\nimport moment from 'moment'\r\nimport * as Yup from 'yup'\r\n\r\nimport { saveExpense } from '../actions'\r\nimport { FloatButton } from './FloatButton';\r\n\r\n\r\nfunction AddFormComponent(props) {\r\n    \r\n    const hasMount = useRef(true)\r\n\r\n    useEffect(() => {\r\n        if (hasMount.current) {\r\n            const { saved } = props\r\n            if (saved) {\r\n                toggle()\r\n            }\r\n        } else {\r\n            hasMount.current = true\r\n        }\r\n    })\r\n\r\n    function submit(values, bag) {\r\n        props.saveExpense(values)\r\n        bag = bag\r\n    }\r\n    const [modal, setModal] = useState(false)\r\n    const toggle = () => setModal(!modal)\r\n    const now = moment().format('YYYY-MM-DD')\r\n    return (\r\n        <div>\r\n            <FloatButton onClick={toggle} />\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Add expense</ModalHeader>\r\n                <ModalBody>\r\n                    <Formik\r\n                        initialValues={{\r\n                            amount: '',\r\n                            created: now\r\n                        }}\r\n                        onSubmit={submit}\r\n                        validationSchema={Yup.object().shape({\r\n                            amount: Yup.number().min(1).required(),\r\n                            created: Yup.date().required(),\r\n                        })}\r\n                    >\r\n\r\n                        {({ errors,\r\n                            touched,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            values,\r\n                            isValid,\r\n                            isSubmitting,\r\n                            handleSubmit\r\n                        }) => (\r\n                            <div>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Amount\r\n                                    </Label>\r\n                                    <Input\r\n                                        invalid={errors.amount && touched.amount}\r\n                                        name='amount'\r\n                                        value={values.amount}\r\n                                        type='number'\r\n                                        placeholder='Expense amount'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    {errors.amount && touched.amount && (\r\n                                        <FormFeedback>{errors.amount}</FormFeedback>\r\n                                    )}\r\n                                </FormGroup>\r\n                                <br />\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Date\r\n                                    </Label>\r\n                                    <Input\r\n                                        invalid={errors.created && touched.created}\r\n                                        name='created'\r\n                                        value={values.created}\r\n                                        type='date'\r\n                                        placeholder='expense amount'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    {errors.created && touched.created && (\r\n                                        <FormFeedback>{errors.created}</FormFeedback>\r\n                                    )}\r\n                                </FormGroup>\r\n                                <br />\r\n                                <Button color=\"primary\" onClick={handleSubmit} disabled={!isValid || isSubmitting} > Save </Button>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Formik>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ expense }) => {\r\n    return {\r\n        saved: expense.saved\r\n    }\r\n}\r\n\r\nconst AddForm = connect(mapStateToProps, { saveExpense })(AddFormComponent)\r\nexport { AddForm }"]},"metadata":{},"sourceType":"module"}
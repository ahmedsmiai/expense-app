{"ast":null,"code":"import { EXPENSE_SAVED, FETCHED_FAILED, FETCHED_SUCCESS, FETCHING_EXPENSE, RESET_SAVED } from './types';\nimport { addErrorMessage, clearErrorMessages } from './error_actions';\nimport { apiFetchExpense, apiSaveExpense } from '../api/expense';\nexport const saveExpense = expense => {\n  return async dispatch => {\n    try {\n      dispatch(clearErrorMessages());\n      await apiSaveExpense(expense);\n      dispatch({\n        type: EXPENSE_SAVED\n      });\n    } catch (e) {\n      dispatch(addErrorMessage(e));\n    }\n  };\n};\nexport const fetchExpense = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCHING_EXPENSE\n      });\n      const {\n        data\n      } = await apiFetchExpense();\n      dispatch({\n        type: FETCHED_SUCCESS,\n        payload: data.expense\n      });\n    } catch (e) {\n      dispatch({\n        type: FETCHED_FAILED\n      });\n      dispatch(addErrorMessage(e));\n    }\n  };\n};\nexport const resetSaved = () => ({\n  type: RESET_SAVED\n});","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/actions/expense_actions.js"],"names":["EXPENSE_SAVED","FETCHED_FAILED","FETCHED_SUCCESS","FETCHING_EXPENSE","RESET_SAVED","addErrorMessage","clearErrorMessages","apiFetchExpense","apiSaveExpense","saveExpense","expense","dispatch","type","e","fetchExpense","data","payload","resetSaved"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,cAAxB,EAAwCC,eAAxC,EAAyDC,gBAAzD,EAA2EC,WAA3E,QAA8F,SAA9F;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,iBAApD;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,gBAAhD;AAEA,OAAO,MAAMC,WAAW,GAAGC,OAAO,IAAI;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAACL,kBAAkB,EAAnB,CAAR;AACA,YAAME,cAAc,CAACE,OAAD,CAApB;AACAC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAR;AACH,KAJD,CAIE,OAAOa,CAAP,EAAU;AACRF,MAAAA,QAAQ,CAACN,eAAe,CAACQ,CAAD,CAAhB,CAAR;AACH;AACJ,GARD;AASH,CAVM;AAWP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAMH,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAET;AAAR,OAAD,CAAR;AACA,YAAM;AAAEY,QAAAA;AAAF,UAAW,MAAMR,eAAe,EAAtC;AACAI,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEV,eAAR;AAAyBc,QAAAA,OAAO,EAAED,IAAI,CAACL;AAAvC,OAAD,CAAR;AACH,KAJD,CAIE,OAAOG,CAAP,EAAU;AACRF,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEX;AAAP,OAAD,CAAR;AACAU,MAAAA,QAAQ,CAACN,eAAe,CAACQ,CAAD,CAAhB,CAAR;AACH;AACJ,GATD;AAUH,CAXM;AAaP,OAAO,MAAMI,UAAU,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAER;AAAR,CAAP,CAAnB","sourcesContent":["import { EXPENSE_SAVED, FETCHED_FAILED, FETCHED_SUCCESS, FETCHING_EXPENSE, RESET_SAVED } from './types'\r\nimport { addErrorMessage, clearErrorMessages } from './error_actions'\r\nimport { apiFetchExpense, apiSaveExpense } from '../api/expense'\r\n\r\nexport const saveExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiSaveExpense(expense)\r\n            dispatch({ type: EXPENSE_SAVED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\nexport const fetchExpense = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: FETCHING_EXPENSE });\r\n            const { data } = await apiFetchExpense()\r\n            dispatch({ type: FETCHED_SUCCESS, payload: data.expense })\r\n        } catch (e) {\r\n            dispatch({type: FETCHED_FAILED})\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetSaved = () => ({ type: RESET_SAVED });\r\n"]},"metadata":{},"sourceType":"module"}
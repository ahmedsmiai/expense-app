{"ast":null,"code":"import { AUTH_FAILED, AUTH_SUCCESS, AUTH_ATTEMPTING, USER_LOGOUT } from './types';\nimport { apiLogin, fetchProfile } from '../api/user';\nconst TOKEN_NAME = 'expense_app_token';\nexport const signIn = request_data => {\n  return async dispatch => {\n    dispatch({\n      type: AUTH_ATTEMPTING\n    });\n\n    try {\n      const {\n        data\n      } = await apiLogin(request_data);\n      dispatch(fetchProfile(token));\n      dispatch(success(data.token));\n    } catch (e) {\n      const {\n        response: {\n          data\n        }\n      } = e;\n      dispatch(error(data.error));\n    }\n  };\n};\nexport const onLoadingSignIn = () => {\n  return dispatch => {\n    try {\n      const token = localStorage.getItem(TOKEN_NAME);\n\n      if (token === null || token === 'undefined') {\n        return dispatch(error('You need to login'));\n      }\n\n      dispatch(success(token));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const getProfile = token => {\n  return async dispatch => {\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await fetchProfile(token);\n      console.log(user);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\nexport const logOut = () => {\n  localStorage.clear();\n  return {\n    type: USER_LOGOUT\n  };\n};\n\nconst success = token => {\n  localStorage.setItem(TOKEN_NAME, token);\n  return {\n    type: AUTH_SUCCESS\n  };\n};\n\nconst error = error => {\n  return {\n    type: AUTH_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/actions/auth_actions.js"],"names":["AUTH_FAILED","AUTH_SUCCESS","AUTH_ATTEMPTING","USER_LOGOUT","apiLogin","fetchProfile","TOKEN_NAME","signIn","request_data","dispatch","type","data","token","success","e","response","error","onLoadingSignIn","localStorage","getItem","console","log","getProfile","user","logOut","clear","setItem","payload"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,eAApC,EAAqDC,WAArD,QAAwE,SAAxE;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,aAAvC;AAEA,MAAMC,UAAU,GAAG,mBAAnB;AACA,OAAO,MAAMC,MAAM,GAAGC,YAAY,IAAI;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;;AACA,QAAI;AACA,YAAM;AAAES,QAAAA;AAAF,UAAW,MAAMP,QAAQ,CAACI,YAAD,CAA/B;AACAC,MAAAA,QAAQ,CAACJ,YAAY,CAACO,KAAD,CAAb,CAAR;AACAH,MAAAA,QAAQ,CAACI,OAAO,CAACF,IAAI,CAACC,KAAN,CAAR,CAAR;AACH,KAJD,CAIE,OAAOE,CAAP,EAAU;AACR,YAAM;AAAEC,QAAAA,QAAQ,EAAE;AAAEJ,UAAAA;AAAF;AAAZ,UAAyBG,CAA/B;AACAL,MAAAA,QAAQ,CAACO,KAAK,CAACL,IAAI,CAACK,KAAN,CAAN,CAAR;AACH;AACJ,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMC,eAAe,GAAG,MAAM;AAEjC,SAAOR,QAAQ,IAAI;AACf,QAAI;AACA,YAAMG,KAAK,GAAGM,YAAY,CAACC,OAAb,CAAqBb,UAArB,CAAd;;AACA,UAAIM,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,WAAhC,EAA6C;AACzC,eAAOH,QAAQ,CAACO,KAAK,CAAC,mBAAD,CAAN,CAAf;AACH;;AACDP,MAAAA,QAAQ,CAACI,OAAO,CAACD,KAAD,CAAR,CAAR;AACH,KAND,CAME,OAAOE,CAAP,EAAU;AACRM,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACH;AACJ,GAVD;AAWH,CAbM;AAeP,OAAO,MAAMQ,UAAU,GAAIV,KAAD,IAAW;AACjC,SAAO,MAAMH,QAAN,IAAkB;AACrB,QAAI;AACA,YAAM;AAAEE,QAAAA,IAAI,EAAE;AAAEY,UAAAA;AAAF;AAAR,UAAqB,MAAMlB,YAAY,CAACO,KAAD,CAA7C;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,KAHD,CAGE,OAAOT,CAAP,EAAU;AACRM,MAAAA,OAAO,CAACJ,KAAR,CAAcF,CAAd;AACH;AACJ,GAPD;AAQH,CATM;AAWP,OAAO,MAAMU,MAAM,GAAG,MAAM;AACxBN,EAAAA,YAAY,CAACO,KAAb;AACA,SAAQ;AAAEf,IAAAA,IAAI,EAAEP;AAAR,GAAR;AACH,CAHM;;AAKP,MAAMU,OAAO,GAAID,KAAD,IAAW;AACvBM,EAAAA,YAAY,CAACQ,OAAb,CAAqBpB,UAArB,EAAiCM,KAAjC;AACA,SAAO;AAAEF,IAAAA,IAAI,EAAET;AAAR,GAAP;AACH,CAHD;;AAIA,MAAMe,KAAK,GAAIA,KAAD,IAAW;AACrB,SAAO;AAAEN,IAAAA,IAAI,EAAEV,WAAR;AAAqB2B,IAAAA,OAAO,EAAEX;AAA9B,GAAP;AACH,CAFD","sourcesContent":["import { AUTH_FAILED, AUTH_SUCCESS, AUTH_ATTEMPTING, USER_LOGOUT } from './types'\r\nimport { apiLogin, fetchProfile } from '../api/user';\r\n\r\nconst TOKEN_NAME = 'expense_app_token';\r\nexport const signIn = request_data => {\r\n    return async dispatch => {\r\n        dispatch({ type: AUTH_ATTEMPTING })\r\n        try {\r\n            const { data } = await apiLogin(request_data)\r\n            dispatch(fetchProfile(token));\r\n            dispatch(success(data.token))\r\n        } catch (e) {\r\n            const { response: { data } } = e\r\n            dispatch(error(data.error))\r\n        }\r\n    };\r\n};\r\n\r\nexport const onLoadingSignIn = () => {\r\n\r\n    return dispatch => {\r\n        try {\r\n            const token = localStorage.getItem(TOKEN_NAME);\r\n            if (token === null || token === 'undefined') {\r\n                return dispatch(error('You need to login'));\r\n            }\r\n            dispatch(success(token))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProfile = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data: { user } } = await fetchProfile(token)\r\n            console.log(user)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    localStorage.clear()\r\n    return ({ type: USER_LOGOUT })\r\n}\r\n\r\nconst success = (token) => {\r\n    localStorage.setItem(TOKEN_NAME, token)\r\n    return { type: AUTH_SUCCESS }\r\n};\r\nconst error = (error) => {\r\n    return { type: AUTH_FAILED, payload: error }\r\n};"]},"metadata":{},"sourceType":"module"}
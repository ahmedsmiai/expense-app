{"ast":null,"code":"import _slicedToArray from\"C:/Users/ahmed/Documents/mern-expense-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{connect}from'react-redux';import{ListGroup,Alert}from'reactstrap';import{fetchExpense,deleteExpense}from'../actions/expense_actions';import{AddForm,ExpenseItem,MonthSelector,Spinner,Statistics}from'../components';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HomeC(props){var _useState=useState(moment().month()),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];useEffect(function(){var fetchExpense=props.fetchExpense;fetchExpense(selected);},[selected]);var fetching=props.fetching,expense=props.expense,statistics=props.statistics;function onSelectMonth(month){setSelected(month);}function onDelete(e){var expId=e.target.attributes.getNamedItem('data-id').value;props.deleteExpense(expId);}return/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:30},children:[/*#__PURE__*/_jsx(MonthSelector,{selected:selected,onSelectMonth:onSelectMonth}),/*#__PURE__*/_jsx(\"h3\",{children:\"Expense List\"}),/*#__PURE__*/_jsx(\"hr\",{}),fetching?/*#__PURE__*/_jsx(Spinner,{}):expense.length>0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Statistics,{data:statistics}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(ListGroup,{children:[\" \",expense.map(function(item){return/*#__PURE__*/_jsx(ExpenseItem,{item:item,onDelete:onDelete},item._id);})]})]}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Alert,{style:{display:'flex',justifyContent:'center'},color:\"secondary\",children:\"No saved expenses for this month\"})}),/*#__PURE__*/_jsx(AddForm,{selected:selected})]});}var mapStateToProps=function mapStateToProps(_ref){var expense=_ref.expense;return{fetching:expense.fetching,expense:expense.expense,statistics:expense.statistics};};var Home=connect(mapStateToProps,{deleteExpense:deleteExpense,fetchExpense:fetchExpense})(HomeC);export{Home};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Home.js"],"names":["React","useEffect","useState","connect","ListGroup","Alert","fetchExpense","deleteExpense","AddForm","ExpenseItem","MonthSelector","Spinner","Statistics","moment","HomeC","props","month","selected","setSelected","fetching","expense","statistics","onSelectMonth","onDelete","e","expId","target","attributes","getNamedItem","value","marginTop","length","map","item","_id","display","justifyContent","mapStateToProps","Home"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,4BAA5C,CACA,OAASC,OAAT,CAAkBC,WAAlB,CAA+BC,aAA/B,CAA8CC,OAA9C,CAAsDC,UAAtD,KAAwE,eAAxE,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,wFAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAElB,cAAgCb,QAAQ,CAACW,MAAM,GAAGG,KAAT,EAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAEAjB,SAAS,CAAC,UAAM,CACZ,GAAQK,CAAAA,YAAR,CAAyBS,KAAzB,CAAQT,YAAR,CACAA,YAAY,CAACW,QAAD,CAAZ,CACH,CAHQ,CAGN,CAACA,QAAD,CAHM,CAAT,CAKA,GAAQE,CAAAA,QAAR,CAA0CJ,KAA1C,CAAQI,QAAR,CAAkBC,OAAlB,CAA0CL,KAA1C,CAAkBK,OAAlB,CAA2BC,UAA3B,CAA0CN,KAA1C,CAA2BM,UAA3B,CAEA,QAASC,CAAAA,aAAT,CAAuBN,KAAvB,CAA8B,CAC1BE,WAAW,CAACF,KAAD,CAAX,CACH,CACD,QAASO,CAAAA,QAAT,CAAkBC,CAAlB,CAAqB,CACjB,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASC,UAAT,CAAoBC,YAApB,CAAiC,SAAjC,EAA4CC,KAA1D,CACAd,KAAK,CAACR,aAAN,CAAoBkB,KAApB,EACH,CAED,mBACI,aAAK,KAAK,CAAE,CAAEK,SAAS,CAAE,EAAb,CAAZ,wBACI,KAAC,aAAD,EACI,QAAQ,CAAEb,QADd,CAEI,aAAa,CAAEK,aAFnB,EADJ,cAKI,oCALJ,cAMI,aANJ,CAOKH,QAAQ,cAAI,KAAC,OAAD,IAAJ,CAGDC,OAAO,CAACW,MAAR,CAAiB,CAAjB,cACI,oCACI,KAAC,UAAD,EAAY,IAAI,CAAEV,UAAlB,EADJ,cAEI,aAFJ,cAGI,MAAC,SAAD,gBAAaD,OAAO,CAACY,GAAR,CAAY,SAACC,IAAD,qBACrB,KAAC,WAAD,EAA4B,IAAI,CAAEA,IAAlC,CAAwC,QAAQ,CAAEV,QAAlD,EAAkBU,IAAI,CAACC,GAAvB,CADqB,EAAZ,CAAb,GAHJ,GADJ,cAUK,kCACG,KAAC,KAAD,EAAO,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAAd,CAA6D,KAAK,CAAC,WAAnE,8CADH,EApBjB,cA0BI,KAAC,OAAD,EAAS,QAAQ,CAAEnB,QAAnB,EA1BJ,GADJ,CA8BH,CAID,GAAMoB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAiB,IAAdjB,CAAAA,OAAc,MAAdA,OAAc,CACrC,MAAO,CACHD,QAAQ,CAAEC,OAAO,CAACD,QADf,CAEHC,OAAO,CAAEA,OAAO,CAACA,OAFd,CAGHC,UAAU,CAAED,OAAO,CAACC,UAHjB,CAAP,CAMH,CAPD,CASA,GAAMiB,CAAAA,IAAI,CAAGnC,OAAO,CAACkC,eAAD,CAAkB,CAAE9B,aAAa,CAAbA,aAAF,CAAiBD,YAAY,CAAZA,YAAjB,CAAlB,CAAP,CAA0DQ,KAA1D,CAAb,CACA,OAASwB,IAAT","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ListGroup, Alert } from 'reactstrap';\r\nimport { fetchExpense, deleteExpense } from '../actions/expense_actions'\r\nimport { AddForm, ExpenseItem, MonthSelector, Spinner,Statistics } from '../components'\r\nimport moment from 'moment';\r\n\r\nfunction HomeC(props) {\r\n\r\n    const [selected, setSelected] = useState(moment().month())\r\n\r\n    useEffect(() => {\r\n        const { fetchExpense } = props\r\n        fetchExpense(selected)\r\n    }, [selected])\r\n\r\n    const { fetching, expense, statistics } = props\r\n\r\n    function onSelectMonth(month) {\r\n        setSelected(month)\r\n    }\r\n    function onDelete(e) {\r\n        const expId = e.target.attributes.getNamedItem('data-id').value\r\n        props.deleteExpense(expId)\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: 30 }}>\r\n            <MonthSelector\r\n                selected={selected}\r\n                onSelectMonth={onSelectMonth}\r\n            />\r\n            <h3>Expense List</h3>\r\n            <hr />\r\n            {fetching ? (<Spinner />) :\r\n                (\r\n\r\n                    expense.length > 0 ? (\r\n                        <div>\r\n                            <Statistics data={statistics} />\r\n                            <hr />\r\n                            <ListGroup> {expense.map((item) => (\r\n                                <ExpenseItem key={item._id} item={item} onDelete={onDelete} />\r\n                            ))}\r\n                            </ListGroup>\r\n                        </div>\r\n                    ) :\r\n                        (<div >\r\n                            <Alert style={{ display: 'flex', justifyContent: 'center' }} color=\"secondary\">\r\n                                No saved expenses for this month\r\n                            </Alert>\r\n                        </div>)\r\n                )}\r\n            <AddForm selected={selected} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({ expense }) => {\r\n    return {\r\n        fetching: expense.fetching,\r\n        expense: expense.expense,\r\n        statistics: expense.statistics\r\n\r\n    }\r\n}\r\n\r\nconst Home = connect(mapStateToProps, { deleteExpense, fetchExpense })(HomeC)\r\nexport { Home };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import{Button,Input,FormGroup,Label,FormFeedback}from'reactstrap';import{Formik}from'formik';import moment from'moment';import*as Yup from'yup';import{ErrorMessage}from'../components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FormBody(_ref){var _ref$btnTxt=_ref.btnTxt,btnTxt=_ref$btnTxt===void 0?'Save':_ref$btnTxt,onSubmit=_ref.onSubmit,formRef=_ref.formRef,_ref$expense=_ref.expense,expense=_ref$expense===void 0?{}:_ref$expense;var _expense$description=expense.description,description=_expense$description===void 0?'':_expense$description,_expense$amount=expense.amount,amount=_expense$amount===void 0?'':_expense$amount,_expense$created=expense.created,created=_expense$created===void 0?undefined:_expense$created;var now=created?moment(created).format('YYYY-MM-DD'):moment().format('YYYY-MM-DD');return/*#__PURE__*/_jsx(Formik,{initialValues:{amount:amount,created:now,description:description},innerRef:formRef,onSubmit:onSubmit,validationSchema:Yup.object().shape({description:Yup.string().min(3),amount:Yup.number().min(1).required(),created:Yup.date().required()}),children:function children(_ref2){var errors=_ref2.errors,touched=_ref2.touched,handleBlur=_ref2.handleBlur,handleChange=_ref2.handleChange,values=_ref2.values,isValid=_ref2.isValid,isSubmitting=_ref2.isSubmitting,handleSubmit=_ref2.handleSubmit;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ErrorMessage,{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Description\"}),/*#__PURE__*/_jsx(Input,{invalid:errors.description&&touched.description,name:\"description\",value:values.description,type:\"text\",placeholder:\"Description\",onChange:handleChange,onBlur:handleBlur}),errors.description&&touched.description&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.description})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Amount\"}),/*#__PURE__*/_jsx(Input,{invalid:errors.amount&&touched.amount,name:\"amount\",value:values.amount,type:\"number\",placeholder:\"Expense amount\",onChange:handleChange,onBlur:handleBlur}),errors.amount&&touched.amount&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.amount})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Date\"}),/*#__PURE__*/_jsx(Input,{invalid:errors.created&&touched.created,name:\"created\",value:values.created,type:\"date\",placeholder:\"expense amount\",onChange:handleChange,onBlur:handleBlur}),errors.created&&touched.created&&/*#__PURE__*/_jsx(FormFeedback,{children:errors.created})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Button,{color:\"primary\",onClick:handleSubmit,disabled:!isValid||isSubmitting,children:[\" \",btnTxt,\" \"]})]});}});}export{FormBody};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/components/FormBody.js"],"names":["React","Button","Input","FormGroup","Label","FormFeedback","Formik","moment","Yup","ErrorMessage","FormBody","btnTxt","onSubmit","formRef","expense","description","amount","created","undefined","now","format","object","shape","string","min","number","required","date","errors","touched","handleBlur","handleChange","values","isValid","isSubmitting","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { Formik } from 'formik'\r\nimport moment from 'moment'\r\nimport * as Yup from 'yup'\r\nimport { ErrorMessage } from '../components';\r\n\r\n\r\n\r\nfunction FormBody({ btnTxt = 'Save', onSubmit, formRef, expense={} }) {\r\n    const {\r\n        description = '',\r\n        amount = '',\r\n        created = undefined\r\n    } = expense\r\n    const now = created ? \r\n    moment(created).format('YYYY-MM-DD') \r\n    : moment().format('YYYY-MM-DD')\r\n    return (\r\n        <Formik\r\n            initialValues={{ amount, created:now, description }}\r\n            innerRef={formRef}\r\n            onSubmit={onSubmit}\r\n            validationSchema={Yup.object().shape({\r\n                description: Yup.string().min(3),\r\n                amount: Yup.number().min(1).required(),\r\n                created: Yup.date().required(),\r\n            })}\r\n        >\r\n\r\n            {({ errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n                values,\r\n                isValid,\r\n                isSubmitting,\r\n                handleSubmit\r\n            }) => (\r\n                <div>\r\n                    <ErrorMessage />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Description\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.description && touched.description}\r\n                            name='description'\r\n                            value={values.description}\r\n                            type='text'\r\n                            placeholder='Description'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.description && touched.description && (\r\n                            <FormFeedback>{errors.description}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Amount\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.amount && touched.amount}\r\n                            name='amount'\r\n                            value={values.amount}\r\n                            type='number'\r\n                            placeholder='Expense amount'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.amount && touched.amount && (\r\n                            <FormFeedback>{errors.amount}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Date\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.created && touched.created}\r\n                            name='created'\r\n                            value={values.created}\r\n                            type='date'\r\n                            placeholder='expense amount'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.created && touched.created && (\r\n                            <FormFeedback>{errors.created}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <Button color=\"primary\" onClick={handleSubmit} disabled={!isValid || isSubmitting} > {btnTxt} </Button>\r\n                </div>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n}\r\nexport { FormBody }\r\n"]},"metadata":{},"sourceType":"module"}
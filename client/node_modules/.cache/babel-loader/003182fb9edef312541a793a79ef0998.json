{"ast":null,"code":"import { EXPENSE_SAVED, EXPENSE_UPDATED, FETCHED_FAILED, FETCHED_SUCCESS, FETCHING_EXPENSE, RESET_SAVED } from './types';\nimport { addErrorMessage, clearErrorMessages } from './error_actions';\nimport { apiFetchExpense, apiSaveExpense, apiUpdateExpense } from '../api/expense';\nexport const saveExpense = expense => {\n  return async dispatch => {\n    try {\n      dispatch(clearErrorMessages());\n      await apiSaveExpense(expense);\n      dispatch({\n        type: EXPENSE_SAVED\n      });\n    } catch (e) {\n      dispatch(addErrorMessage(e));\n    }\n  };\n};\nexport const fetchExpense = month => {\n  return async dispatch => {\n    try {\n      const prefix = '/expense';\n      const url = month > -1 ? `${prefix}/${month}` : prefix;\n      dispatch({\n        type: FETCHING_EXPENSE\n      });\n      const {\n        data\n      } = await apiFetchExpense(url);\n      dispatch({\n        type: FETCHED_SUCCESS,\n        payload: data.expense\n      });\n    } catch (e) {\n      dispatch({\n        type: FETCHED_FAILED\n      });\n      dispatch(addErrorMessage(e));\n    }\n  };\n};\nexport const updateExpense = expense => {\n  return async dispatch => {\n    try {\n      dispatch(clearErrorMessages());\n      await apiUpdateExpenseExpense(expense);\n      dispatch({\n        type: EXPENSE_UPDATED\n      });\n    } catch (e) {\n      dispatch(addErrorMessage(e));\n    }\n  };\n};\nexport const resetSaved = () => ({\n  type: RESET_SAVED\n});","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/actions/expense_actions.js"],"names":["EXPENSE_SAVED","EXPENSE_UPDATED","FETCHED_FAILED","FETCHED_SUCCESS","FETCHING_EXPENSE","RESET_SAVED","addErrorMessage","clearErrorMessages","apiFetchExpense","apiSaveExpense","apiUpdateExpense","saveExpense","expense","dispatch","type","e","fetchExpense","month","prefix","url","data","payload","updateExpense","apiUpdateExpenseExpense","resetSaved"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,eAAzD,EAA0EC,gBAA1E,EAA4FC,WAA5F,QAA+G,SAA/G;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,iBAApD;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,gBAA1C,QAAkE,gBAAlE;AAEA,OAAO,MAAMC,WAAW,GAAGC,OAAO,IAAI;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACA,YAAME,cAAc,CAACG,OAAD,CAApB;AACAC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEd;AAAR,OAAD,CAAR;AACH,KAJD,CAIE,OAAOe,CAAP,EAAU;AACRF,MAAAA,QAAQ,CAACP,eAAe,CAACS,CAAD,CAAhB,CAAR;AACH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,SAAO,MAAMJ,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMK,MAAM,GAAG,UAAf;AACA,YAAMC,GAAG,GAAIF,KAAK,GAAC,CAAC,CAAP,GAAW,GAAEC,MAAO,IAAGD,KAAM,EAA7B,GAAgCC,MAA7C;AACAL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEV;AAAR,OAAD,CAAR;AACA,YAAM;AAAEgB,QAAAA;AAAF,UAAW,MAAMZ,eAAe,CAACW,GAAD,CAAtC;AACAN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEX,eAAR;AAAyBkB,QAAAA,OAAO,EAAED,IAAI,CAACR;AAAvC,OAAD,CAAR;AACH,KAND,CAME,OAAOG,CAAP,EAAU;AACRF,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEZ;AAAP,OAAD,CAAR;AACAW,MAAAA,QAAQ,CAACP,eAAe,CAACS,CAAD,CAAhB,CAAR;AACH;AACJ,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMO,aAAa,GAAGV,OAAO,IAAI;AACpC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACA,YAAMgB,uBAAuB,CAACX,OAAD,CAA7B;AACAC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEb;AAAR,OAAD,CAAR;AACH,KAJD,CAIE,OAAOc,CAAP,EAAU;AACRF,MAAAA,QAAQ,CAACP,eAAe,CAACS,CAAD,CAAhB,CAAR;AACH;AACJ,GARD;AASH,CAVM;AAaP,OAAO,MAAMS,UAAU,GAAG,OAAO;AAAEV,EAAAA,IAAI,EAAET;AAAR,CAAP,CAAnB","sourcesContent":["import { EXPENSE_SAVED, EXPENSE_UPDATED, FETCHED_FAILED, FETCHED_SUCCESS, FETCHING_EXPENSE, RESET_SAVED } from './types'\r\nimport { addErrorMessage, clearErrorMessages } from './error_actions'\r\nimport { apiFetchExpense, apiSaveExpense, apiUpdateExpense } from '../api/expense'\r\n\r\nexport const saveExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiSaveExpense(expense)\r\n            dispatch({ type: EXPENSE_SAVED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchExpense = (month) => {\r\n    return async dispatch => {\r\n        try {\r\n            const prefix = '/expense'\r\n            const url = (month>-1 ?`${prefix}/${month}`: prefix  )\r\n            dispatch({ type: FETCHING_EXPENSE });\r\n            const { data } = await apiFetchExpense(url)\r\n            dispatch({ type: FETCHED_SUCCESS, payload: data.expense })\r\n        } catch (e) {\r\n            dispatch({type: FETCHED_FAILED})\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiUpdateExpenseExpense(expense)\r\n            dispatch({ type: EXPENSE_UPDATED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const resetSaved = () => ({ type: RESET_SAVED });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/ahmed/Documents/mern-expense-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{connect}from'react-redux';import{Modal,ModalHeader,ModalBody}from'reactstrap';import{saveExpense,resetSaved,fetchExpense}from'../actions';import{FloatButton,FormBody}from'../components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function useDidUpdate(callback){var hasMount=useRef(false);useEffect(function(){if(hasMount.current){callback();}else{hasMount.current=true;}});}function AddFormComponent(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var formRef=useRef();useDidUpdate(function(){var saved=props.saved,error=props.error,resetSaved=props.resetSaved,fetchExpense=props.fetchExpense;if(error){formRef.current.setSubmitting(false);}if(saved&&modal){toggle();fetchExpense(props.selected);resetSaved();formRef.current.resetForm();}});function submit(values){props.saveExpense(values);}var toggle=function toggle(){return setModal(!modal);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FloatButton,{onClick:toggle}),/*#__PURE__*/_jsxs(Modal,{isOpen:modal,toggle:toggle,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:toggle,children:\"Add expense\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(FormBody,{onSubmit:submit,formRef:formRef})})]})]});}var mapStateToProps=function mapStateToProps(_ref){var expense=_ref.expense,errors=_ref.errors;return{saved:expense.saved,error:errors.message};};var AddForm=connect(mapStateToProps,{saveExpense:saveExpense,resetSaved:resetSaved,fetchExpense:fetchExpense})(AddFormComponent);export{AddForm};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/components/AddForm.js"],"names":["React","useState","useEffect","useRef","connect","Modal","ModalHeader","ModalBody","saveExpense","resetSaved","fetchExpense","FloatButton","FormBody","useDidUpdate","callback","hasMount","current","AddFormComponent","props","modal","setModal","formRef","saved","error","setSubmitting","toggle","selected","resetForm","submit","values","mapStateToProps","expense","errors","message","AddForm"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,CAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,YAA9C,CAGA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,YAAlC,KAAsD,YAAtD,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,eAAtC,C,wFAGA,QAASC,CAAAA,YAAT,CAAsBC,QAAtB,CAAgC,CAC5B,GAAMC,CAAAA,QAAQ,CAAGZ,MAAM,CAAC,KAAD,CAAvB,CACAD,SAAS,CAAC,UAAM,CACZ,GAAIa,QAAQ,CAACC,OAAb,CAAsB,CAClBF,QAAQ,GACX,CAFD,IAEO,CACHC,QAAQ,CAACC,OAAT,CAAmB,IAAnB,CACH,CACJ,CANQ,CAAT,CAOH,CAED,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAE7B,cAA0BjB,QAAQ,CAAC,KAAD,CAAlC,wCAAOkB,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,OAAO,CAAGlB,MAAM,EAAtB,CAEAU,YAAY,CAAC,UAAM,CACf,GAAQS,CAAAA,KAAR,CAAmDJ,KAAnD,CAAQI,KAAR,CAAeC,KAAf,CAAmDL,KAAnD,CAAeK,KAAf,CAAsBd,UAAtB,CAAmDS,KAAnD,CAAsBT,UAAtB,CAAkCC,YAAlC,CAAmDQ,KAAnD,CAAkCR,YAAlC,CACA,GAAIa,KAAJ,CAAW,CACPF,OAAO,CAACL,OAAR,CAAgBQ,aAAhB,CAA8B,KAA9B,EACH,CACD,GAAIF,KAAK,EAAIH,KAAb,CAAoB,CAChBM,MAAM,GACNf,YAAY,CAACQ,KAAK,CAACQ,QAAP,CAAZ,CACAjB,UAAU,GACVY,OAAO,CAACL,OAAR,CAAgBW,SAAhB,GAEH,CACJ,CAZW,CAAZ,CAaA,QAASC,CAAAA,MAAT,CAAgBC,MAAhB,CAAwB,CACpBX,KAAK,CAACV,WAAN,CAAkBqB,MAAlB,EACH,CAED,GAAMJ,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAML,CAAAA,QAAQ,CAAC,CAACD,KAAF,CAAd,EAAf,CACA,mBACI,oCACI,KAAC,WAAD,EAAa,OAAO,CAAEM,MAAtB,EADJ,cAEI,MAAC,KAAD,EAAO,MAAM,CAAEN,KAAf,CAAsB,MAAM,CAAEM,MAA9B,wBACI,KAAC,WAAD,EAAa,MAAM,CAAEA,MAArB,yBADJ,cAEI,KAAC,SAAD,wBACA,KAAC,QAAD,EAAU,QAAQ,CAAEG,MAApB,CAA4B,OAAO,CAAEP,OAArC,EADA,EAFJ,GAFJ,GADJ,CAaH,CACD,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAyB,IAAtBC,CAAAA,OAAsB,MAAtBA,OAAsB,CAAbC,MAAa,MAAbA,MAAa,CAC7C,MAAO,CACHV,KAAK,CAAES,OAAO,CAACT,KADZ,CAEHC,KAAK,CAAES,MAAM,CAACC,OAFX,CAAP,CAIH,CALD,CAOA,GAAMC,CAAAA,OAAO,CAAG9B,OAAO,CAAC0B,eAAD,CACnB,CAAEtB,WAAW,CAAXA,WAAF,CAAeC,UAAU,CAAVA,UAAf,CAA2BC,YAAY,CAAZA,YAA3B,CADmB,CAAP,CAC+BO,gBAD/B,CAAhB,CAEA,OAASiB,OAAT","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\nimport { saveExpense, resetSaved, fetchExpense } from '../actions'\r\nimport { FloatButton, FormBody } from '../components';\r\n\r\n\r\nfunction useDidUpdate(callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n        if (hasMount.current) {\r\n            callback()\r\n        } else {\r\n            hasMount.current = true\r\n        }\r\n    })\r\n}\r\n\r\nfunction AddFormComponent(props) {\r\n\r\n    const [modal, setModal] = useState(false)\r\n    const formRef = useRef()\r\n\r\n    useDidUpdate(() => {\r\n        const { saved, error, resetSaved, fetchExpense } = props\r\n        if (error) {\r\n            formRef.current.setSubmitting(false)\r\n        }\r\n        if (saved && modal) {\r\n            toggle()\r\n            fetchExpense(props.selected)\r\n            resetSaved()\r\n            formRef.current.resetForm()\r\n\r\n        }\r\n    })\r\n    function submit(values) {\r\n        props.saveExpense(values)\r\n    }\r\n\r\n    const toggle = () => setModal(!modal)\r\n    return (\r\n        <div>\r\n            <FloatButton onClick={toggle} />\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Add expense</ModalHeader>\r\n                <ModalBody>\r\n                <FormBody onSubmit={submit} formRef={formRef}/>\r\n                   \r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = ({ expense, errors }) => {\r\n    return {\r\n        saved: expense.saved,\r\n        error: errors.message\r\n    }\r\n}\r\n\r\nconst AddForm = connect(mapStateToProps, \r\n    { saveExpense, resetSaved, fetchExpense })(AddFormComponent)\r\nexport { AddForm }"]},"metadata":{},"sourceType":"module"}
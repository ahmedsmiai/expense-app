{"ast":null,"code":"import React from'react';import{Button,FormGroup,Label,Input,FormFeedback}from'reactstrap';import{useFormik}from'formik';import{Link}from'react-router-dom';import*as Yup from'yup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Signup=function Signup(){var validationSchema=Yup.object({name:Yup.string().required(\"Enter your name\"),email:Yup.string().email(\"Enter a valid email\").required(\"Enter your email\"),password:Yup.string().min(6,\"Password must contain at least 8 charcters\").required(\"Enter a password\")});var formik=useFormik({initialValues:{name:\"\",email:\"\",password:\"\"},onSubmit:function onSubmit(){formik.resetForm();},validationSchema:validationSchema});return/*#__PURE__*/_jsxs(\"div\",{style:{display:'block',padding:20},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create a new account\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Input,{placeholder:'Enter your full name',valid:!formik.errors.name&&formik.touched.name,invalid:formik.errors.name&&formik.touched.name,name:\"name\",type:\"text\",onBlur:formik.handleBlur,value:formik.values.name,onChange:formik.handleChange('name')}),/*#__PURE__*/_jsxs(FormFeedback,{children:[formik.errors.name,\" \"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Input,{placeholder:'Enter your email',valid:!formik.errors.email&&formik.touched.email,invalid:formik.errors.email&&formik.touched.email,name:\"email\",type:\"email\",onBlur:formik.handleBlur,value:formik.values.email,onChange:formik.handleChange('email')}),/*#__PURE__*/_jsxs(FormFeedback,{children:[formik.errors.email,\" \"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{placeholder:'Enter a passwoord',valid:!formik.errors.password&&formik.touched.password,invalid:formik.errors.password&&formik.touched.password,name:\"password\",type:\"password\",onBlur:formik.handleBlur,value:formik.values.password,onChange:formik.handleChange('password')}),/*#__PURE__*/_jsxs(FormFeedback,{children:[formik.errors.password,\" \"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",type:\"submit\",onClick:formik.handleSubmit,disabled:!formik.isValid||formik.isSubmitting,children:\" Sign Up \"}),/*#__PURE__*/_jsx(\"br\",{}),\"Have an account ? \",/*#__PURE__*/_jsx(Link,{to:'/login',children:\"Login\"})]})]})]});};export{Signup};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Signup.js"],"names":["React","Button","FormGroup","Label","Input","FormFeedback","useFormik","Link","Yup","Signup","validationSchema","object","name","string","required","email","password","min","formik","initialValues","onSubmit","resetForm","display","padding","errors","touched","handleBlur","values","handleChange","handleSubmit","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\nconst Signup = () => {\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string()\r\n            .required(\"Enter your name\"),\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Enter your email\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 8 charcters\")\r\n            .required(\"Enter a password\")\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name:\"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        onSubmit: () => {\r\n            formik.resetForm()\r\n        },\r\n        validationSchema\r\n    })\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Create a new account</h3>\r\n            <hr />\r\n\r\n            <div>\r\n                <FormGroup>\r\n                    <Label>Name</Label>\r\n                    <Input\r\n                        placeholder={'Enter your full name'}\r\n                        valid={!formik.errors.name && formik.touched.name}\r\n                        invalid={formik.errors.name && formik.touched.name}\r\n                        name='name'\r\n                        type='text'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange('name')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.name} </FormFeedback>\r\n                </FormGroup>\r\n                <br/>\r\n                <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                    placeholder={'Enter your email'}\r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                    placeholder={'Enter a passwoord'}\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.password} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign Up </Button>\r\n                    <br/>\r\n                Have an account ? <Link to={'/login'}>Login</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport { Signup }\r\n"]},"metadata":{},"sourceType":"module"}
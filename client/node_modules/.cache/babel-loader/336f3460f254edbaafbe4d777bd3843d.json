{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\mern-expense-app\\\\client\\\\src\\\\pages\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { signUp, signIn, resetSignup } from '../actions/auth_actions'; // function useDidUpdate(callback) {\n//     const hasMount = useRef(false)\n//     useEffect(() => {\n//         if (hasMount.current) {\n//             callback()\n//         } else {\n//             hasMount.current = true\n//         }\n//     })\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupPage = props => {\n  _s();\n\n  const hasMount = useRef(false);\n  useEffect(() => {\n    if (hasMount.current) {\n      const {\n        signedUp,\n        resetSignup,\n        signIn,\n        isAuth\n      } = props;\n\n      if (signedUp) {\n        resetSignup();\n        signIn({\n          email: formik.values.email,\n          password: formik.values.password\n        });\n      }\n\n      if (isAuth) {\n        props.history.push('/');\n      }\n    } else {\n      hasMount.current = true;\n    }\n  }, [props.signedUp, props.isAuth]); // useDidUpdate(() => {\n  //     const { signedUp, resetSignup, signIn, isAuth } = props\n  //     if (signedUp) {\n  //         resetSignup()\n  //         signIn({ email: formik.values.email, password: formik.values.password })\n  //     }\n  //     if (isAuth) {\n  //         props.history.push('/')\n  //     }\n  // })\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Enter your name\"),\n    email: Yup.string().email(\"Enter a valid email\").required(\"Enter your email\"),\n    password: Yup.string().min(6, \"Password must contain at least 8 charcters\").required(\"Enter a password\")\n  });\n\n  function handleSubmit() {\n    props.signUp(formik.values);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: () => {\n      handleSubmit();\n    },\n    validationSchema\n  });\n\n  const renderError = () => {\n    const {\n      error\n    } = props;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'block',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a new account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), renderError(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: 'Enter your full name',\n          valid: !formik.errors.name && formik.touched.name,\n          invalid: formik.errors.name && formik.touched.name,\n          name: \"name\",\n          type: \"text\",\n          onBlur: formik.handleBlur,\n          value: formik.values.name,\n          onChange: formik.handleChange('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: 'Enter your email',\n          valid: !formik.errors.email && formik.touched.email,\n          invalid: formik.errors.email && formik.touched.email,\n          name: \"email\",\n          type: \"email\",\n          onBlur: formik.handleBlur,\n          value: formik.values.email,\n          onChange: formik.handleChange('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: 'Enter a passwoord',\n          valid: !formik.errors.password && formik.touched.password,\n          invalid: formik.errors.password && formik.touched.password,\n          name: \"password\",\n          type: \"password\",\n          onBlur: formik.handleBlur,\n          value: formik.values.password,\n          onChange: formik.handleChange('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.password, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          onClick: formik.handleSubmit,\n          disabled: !formik.isValid || formik.isSubmitting,\n          children: \" Sign Up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), \"Have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupPage, \"2nl9jg+SBpRupORgBGDY5Dvg5CE=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignupPage;\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    error: auth.error,\n    signedUp: auth.signedUp,\n    attempting: auth.attempting,\n    isAuth: auth.isAuth\n  };\n};\n\nconst Signup = connect(mapStateToProps, {\n  signUp,\n  resetSignup,\n  signIn\n})(SignupPage);\nexport { Signup };\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Signup.js"],"names":["React","useEffect","useRef","connect","Button","FormGroup","Label","Input","FormFeedback","Alert","useFormik","Link","Yup","signUp","signIn","resetSignup","SignupPage","props","hasMount","current","signedUp","isAuth","email","formik","values","password","history","push","validationSchema","object","name","string","required","min","handleSubmit","initialValues","onSubmit","renderError","error","display","padding","errors","touched","handleBlur","handleChange","isValid","isSubmitting","mapStateToProps","auth","attempting","Signup"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport { signUp, signIn, resetSignup } from '../actions/auth_actions'\r\n\r\n\r\n// function useDidUpdate(callback) {\r\n//     const hasMount = useRef(false)\r\n//     useEffect(() => {\r\n//         if (hasMount.current) {\r\n//             callback()\r\n//         } else {\r\n//             hasMount.current = true\r\n//         }\r\n//     })\r\n// }\r\n\r\n\r\nconst SignupPage = (props) => {\r\n\r\n\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n        if (hasMount.current) {\r\n            const { signedUp, resetSignup, signIn, isAuth } = props\r\n            if (signedUp) {\r\n                resetSignup()\r\n                signIn({ email: formik.values.email, password: formik.values.password })\r\n            }\r\n            if (isAuth) {\r\n                props.history.push('/')\r\n            }\r\n        } else {\r\n            hasMount.current = true\r\n        }\r\n    },[props.signedUp, props.isAuth])\r\n\r\n\r\n// useDidUpdate(() => {\r\n//     const { signedUp, resetSignup, signIn, isAuth } = props\r\n//     if (signedUp) {\r\n//         resetSignup()\r\n//         signIn({ email: formik.values.email, password: formik.values.password })\r\n//     }\r\n//     if (isAuth) {\r\n//         props.history.push('/')\r\n//     }\r\n// })\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string()\r\n        .required(\"Enter your name\"),\r\n    email: Yup.string()\r\n        .email(\"Enter a valid email\")\r\n        .required(\"Enter your email\"),\r\n    password: Yup.string()\r\n        .min(6, \"Password must contain at least 8 charcters\")\r\n        .required(\"Enter a password\")\r\n})\r\nfunction handleSubmit() {\r\n    props.signUp(formik.values)\r\n}\r\nconst formik = useFormik({\r\n    initialValues: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    },\r\n\r\n    onSubmit: () => {\r\n        handleSubmit()\r\n    },\r\n    validationSchema\r\n})\r\n\r\nconst renderError = () => {\r\n    const { error } = props\r\n    if (error) {\r\n        return (\r\n            <Alert color=\"danger\">\r\n                {error}\r\n            </Alert>\r\n        )\r\n    }\r\n}\r\nreturn (\r\n    <div style={{ display: 'block', padding: 20 }}>\r\n        <h3>Create a new account</h3>\r\n        <hr />\r\n        {renderError()}\r\n        <div>\r\n            <FormGroup>\r\n                <Label>Name</Label>\r\n                <Input\r\n                    placeholder={'Enter your full name'}\r\n                    valid={!formik.errors.name && formik.touched.name}\r\n                    invalid={formik.errors.name && formik.touched.name}\r\n                    name='name'\r\n                    type='text'\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange('name')}\r\n                />\r\n                <FormFeedback>{formik.errors.name} </FormFeedback>\r\n            </FormGroup>\r\n            <br />\r\n            <FormGroup>\r\n                <Label>Email</Label>\r\n                <Input\r\n                    placeholder={'Enter your email'}\r\n                    valid={!formik.errors.email && formik.touched.email}\r\n                    invalid={formik.errors.email && formik.touched.email}\r\n                    name='email'\r\n                    type='email'\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange('email')}\r\n                />\r\n                <FormFeedback>{formik.errors.email} </FormFeedback>\r\n            </FormGroup>\r\n            <br />\r\n            <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                    placeholder={'Enter a passwoord'}\r\n                    valid={!formik.errors.password && formik.touched.password}\r\n                    invalid={formik.errors.password && formik.touched.password}\r\n                    name='password'\r\n                    type='password'\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange('password')}\r\n                />\r\n                <FormFeedback>{formik.errors.password} </FormFeedback>\r\n            </FormGroup>\r\n            <br />\r\n            <div className='text-center'>\r\n                <Button\r\n                    color='primary'\r\n                    type='submit'\r\n                    onClick={formik.handleSubmit}\r\n                    disabled={!formik.isValid || formik.isSubmitting}\r\n                > Sign Up </Button>\r\n                <br />\r\n                Have an account ? <Link to={'/login'}>Login</Link>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n)\r\n}\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        error: auth.error,\r\n        signedUp: auth.signedUp,\r\n        attempting: auth.attempting,\r\n        isAuth: auth.isAuth\r\n    };\r\n};\r\n\r\nconst Signup = connect(\r\n    mapStateToProps,\r\n    { signUp, resetSignup, signIn }\r\n)(SignupPage);\r\nexport { Signup };"]},"metadata":{},"sourceType":"module"}
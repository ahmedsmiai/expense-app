{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\mern-expense-app\\\\client\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { signIn } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useDidUpdate(callback) {\n  _s();\n\n  const hasMount = useRef(false);\n  useEffect(() => {\n    if (hasMount.current) {\n      callback();\n    } else {\n      hasMount.current = true;\n    }\n  });\n}\n\n_s(useDidUpdate, \"xkQfLb2STfY6p2HrBpLBC/QkeUE=\");\n\nfunction LoginPage(props) {\n  _s2();\n\n  useDidUpdate(() => {\n    const {\n      isAuth\n    } = props;\n\n    if (isAuth) {\n      props.history.push('/');\n    }\n  });\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Enter a valid email\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must contain at least 8 charcters\").required(\"Enter your password\")\n  });\n\n  function handleSubmit() {\n    props.signIn(formik.values);\n    console.log(formik.values);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: () => {\n      handleSubmit();\n      formik.resetForm();\n    },\n    validationSchema\n  });\n\n  const renderError = () => {\n    const {\n      error\n    } = props;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'block',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign in to your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), renderError(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xs-4\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          valid: !formik.errors.email && formik.touched.email,\n          invalid: formik.errors.email && formik.touched.email,\n          name: \"email\",\n          type: \"email\",\n          onBlur: formik.handleBlur,\n          value: formik.values.email,\n          onChange: formik.handleChange('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          valid: !formik.errors.password && formik.touched.password,\n          invalid: formik.errors.password && formik.touched.password,\n          name: \"password\",\n          type: \"password\",\n          onBlur: formik.handleBlur,\n          value: formik.values.password,\n          onChange: formik.handleChange('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.password, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          onClick: formik.handleSubmit,\n          disabled: !formik.isValid || formik.isSubmitting,\n          children: \" Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \"Do not have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: '/signup',\n          children: \"Sign up here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(LoginPage, \"dsBC8sozOqSB95tmQVrrCnE70v0=\", false, function () {\n  return [useDidUpdate, useFormik];\n});\n\n_c = LoginPage;\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    attempting: auth.attempting,\n    error: auth.error,\n    isAuth: auth.isAuth\n  };\n};\n\nconst Login = connect(mapStateToProps, {\n  signIn\n})(LoginPage);\nexport { Login };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Login.js"],"names":["React","useEffect","useRef","Button","FormGroup","Label","Input","FormFeedback","Alert","useFormik","connect","Link","Yup","signIn","useDidUpdate","callback","hasMount","current","LoginPage","props","isAuth","history","push","validationSchema","object","email","string","required","password","min","handleSubmit","formik","values","console","log","initialValues","onSubmit","resetForm","renderError","error","display","padding","errors","touched","handleBlur","handleChange","isValid","isSubmitting","mapStateToProps","auth","attempting","Login"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport { signIn } from '../actions'\r\n\r\nfunction useDidUpdate (callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n      if (hasMount.current) {\r\n        callback()\r\n      } else {\r\n        hasMount.current = true\r\n      }\r\n    })\r\n  }\r\n\r\nfunction LoginPage(props) {\r\n\r\n\r\n    useDidUpdate(()=>{\r\n        const { isAuth } = props\r\n        if (isAuth){\r\n            props.history.push('/')\r\n        }\r\n    })\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Email is required\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 8 charcters\")\r\n            .required(\"Enter your password\")\r\n    })\r\n\r\n    function handleSubmit() {\r\n        props.signIn(formik.values) \r\n        console.log(formik.values)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        onSubmit: () => {\r\n            handleSubmit()\r\n            formik.resetForm()\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const renderError = () => {\r\n        const { error } = props\r\n        if (error) {\r\n            return (\r\n                <Alert color=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Sign in to your account</h3>\r\n            <hr />\r\n            {renderError()}\r\n            <div className='col-xs-4'>\r\n                <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                    \r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.password} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign In\r\n                    </Button>\r\n                    <br />\r\n                    Do not have an account ? <Link to={'/signup'}>Sign up here</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        attempting: auth.attempting,\r\n        error: auth.error,\r\n        isAuth: auth.isAuth\r\n    }\r\n}\r\nconst Login = connect(mapStateToProps, { signIn })(LoginPage)\r\nexport { Login }\r\n"]},"metadata":{},"sourceType":"module"}
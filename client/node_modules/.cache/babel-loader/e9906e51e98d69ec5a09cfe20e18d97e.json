{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\mern-expense-app\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRouteComponent({\n  isAuth,\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuth ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ProtectedRouteComponent;\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    isAuth: auth.isAuth\n  };\n};\n\nconst ProtectedRoute = connect(mapStateToProps)(ProtectedRouteComponent);\nexport { ProtectedRoute };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRouteComponent\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/components/ProtectedRoute.js"],"names":["React","connect","Route","Redirect","ProtectedRouteComponent","isAuth","component","Component","rest","props","mapStateToProps","auth","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,SAASC,uBAAT,CAAiC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAS,EAAEC,SAArB;AAAgC,KAAGC;AAAnC,CAAjC,EAA4E;AACxE,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAEC,KAAK,IAAIJ,MAAM,gBAAG,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFzD;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQL,uB;;AAST,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClC,SAAO;AACHN,IAAAA,MAAM,EAAEM,IAAI,CAACN;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMO,cAAc,GAAGX,OAAO,CAACS,eAAD,CAAP,CAAyBN,uBAAzB,CAAvB;AACA,SAASQ,cAAT","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction ProtectedRouteComponent({ isAuth, component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => isAuth ? <Component {...props} /> : <Redirect to='/login' />}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        isAuth: auth.isAuth\r\n    }\r\n}\r\n\r\nconst ProtectedRoute = connect(mapStateToProps)(ProtectedRouteComponent)\r\nexport { ProtectedRoute }"]},"metadata":{},"sourceType":"module"}
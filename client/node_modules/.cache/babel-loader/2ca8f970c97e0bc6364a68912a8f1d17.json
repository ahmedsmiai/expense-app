{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\mern-expense-app\\\\client\\\\src\\\\components\\\\FormBody.js\";\nimport React, { useRef } from 'react';\nimport { Button, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport { ErrorMessage } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormBody({\n  btnTxt = 'Save',\n  onSubmit,\n  ref\n}) {\n  const now = moment().format('YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      description: '',\n      amount: '',\n      created: now\n    },\n    innerRef: ref,\n    onSubmit: onSubmit,\n    validationSchema: Yup.object().shape({\n      description: Yup.string().min(3),\n      amount: Yup.number().min(1).required(),\n      created: Yup.date().required()\n    }),\n    children: ({\n      errors,\n      touched,\n      handleBlur,\n      handleChange,\n      values,\n      isValid,\n      isSubmitting,\n      handleSubmit\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          invalid: errors.description && touched.description,\n          name: \"description\",\n          value: values.description,\n          type: \"text\",\n          placeholder: \"Description\",\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), errors.description && touched.description && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          invalid: errors.amount && touched.amount,\n          name: \"amount\",\n          value: values.amount,\n          type: \"number\",\n          placeholder: \"Expense amount\",\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), errors.amount && touched.amount && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: errors.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          invalid: errors.created && touched.created,\n          name: \"created\",\n          value: values.created,\n          type: \"date\",\n          placeholder: \"expense amount\",\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), errors.created && touched.created && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: errors.created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSubmit,\n        disabled: !isValid || isSubmitting,\n        children: [\" \", btnTxt, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FormBody;\nexport { FormBody };\n\nvar _c;\n\n$RefreshReg$(_c, \"FormBody\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/components/FormBody.js"],"names":["React","useRef","Button","Input","FormGroup","Label","FormFeedback","Formik","moment","Yup","ErrorMessage","FormBody","btnTxt","onSubmit","ref","now","format","description","amount","created","object","shape","string","min","number","required","date","errors","touched","handleBlur","handleChange","values","isValid","isSubmitting","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Button, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { Formik } from 'formik'\r\nimport moment from 'moment'\r\nimport * as Yup from 'yup'\r\nimport { ErrorMessage } from '../components';\r\n\r\n\r\n\r\nfunction FormBody({ btnTxt = 'Save', onSubmit, ref }) {\r\n\r\n    const now = moment().format('YYYY-MM-DD')\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                description: '',\r\n                amount: '',\r\n                created: now\r\n            }}\r\n            innerRef={ref}\r\n            onSubmit={onSubmit}\r\n            validationSchema={Yup.object().shape({\r\n                description: Yup.string().min(3),\r\n                amount: Yup.number().min(1).required(),\r\n                created: Yup.date().required(),\r\n            })}\r\n        >\r\n\r\n            {({ errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n                values,\r\n                isValid,\r\n                isSubmitting,\r\n                handleSubmit\r\n            }) => (\r\n                <div>\r\n                    <ErrorMessage />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Description\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.description && touched.description}\r\n                            name='description'\r\n                            value={values.description}\r\n                            type='text'\r\n                            placeholder='Description'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.description && touched.description && (\r\n                            <FormFeedback>{errors.description}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Amount\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.amount && touched.amount}\r\n                            name='amount'\r\n                            value={values.amount}\r\n                            type='number'\r\n                            placeholder='Expense amount'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.amount && touched.amount && (\r\n                            <FormFeedback>{errors.amount}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Date\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.created && touched.created}\r\n                            name='created'\r\n                            value={values.created}\r\n                            type='date'\r\n                            placeholder='expense amount'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.created && touched.created && (\r\n                            <FormFeedback>{errors.created}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <Button color=\"primary\" onClick={handleSubmit} disabled={!isValid || isSubmitting} > {btnTxt} </Button>\r\n                </div>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport { FormBody }\r\n"]},"metadata":{},"sourceType":"module"}
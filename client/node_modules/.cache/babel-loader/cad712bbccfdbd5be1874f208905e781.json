{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\mern-expense-app\\\\client\\\\src\\\\pages\\\\Signup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { signUp, signIn } from '../actions/auth_actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useDidUpdate(callback) {\n  _s();\n\n  const hasMount = useRef(false);\n  useEffect(() => {\n    if (hasMount.current) {\n      callback();\n    } else {\n      hasMount.current = true;\n    }\n  });\n}\n\n_s(useDidUpdate, \"xkQfLb2STfY6p2HrBpLBC/QkeUE=\");\n\nconst SignupPage = props => {\n  _s2();\n\n  useDidUpdate(() => {\n    const {\n      isAuth\n    } = props;\n\n    if (isAuth) {\n      props.history.push('/');\n    }\n  });\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Enter your name\"),\n    email: Yup.string().email(\"Enter a valid email\").required(\"Enter your email\"),\n    password: Yup.string().min(6, \"Password must contain at least 8 charcters\").required(\"Enter a password\")\n  });\n\n  function handleSubmit() {\n    props.signUp(formik.values);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: () => {\n      handleSubmit();\n      formik.resetForm();\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'block',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a new account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: 'Enter your full name',\n          valid: !formik.errors.name && formik.touched.name,\n          invalid: formik.errors.name && formik.touched.name,\n          name: \"name\",\n          type: \"text\",\n          onBlur: formik.handleBlur,\n          value: formik.values.name,\n          onChange: formik.handleChange('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: 'Enter your email',\n          valid: !formik.errors.email && formik.touched.email,\n          invalid: formik.errors.email && formik.touched.email,\n          name: \"email\",\n          type: \"email\",\n          onBlur: formik.handleBlur,\n          value: formik.values.email,\n          onChange: formik.handleChange('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: 'Enter a passwoord',\n          valid: !formik.errors.password && formik.touched.password,\n          invalid: formik.errors.password && formik.touched.password,\n          name: \"password\",\n          type: \"password\",\n          onBlur: formik.handleBlur,\n          value: formik.values.password,\n          onChange: formik.handleChange('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: [formik.errors.password, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          onClick: formik.handleSubmit,\n          disabled: !formik.isValid || formik.isSubmitting,\n          children: \" Sign Up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), \"Have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SignupPage, \"dsBC8sozOqSB95tmQVrrCnE70v0=\", false, function () {\n  return [useDidUpdate, useFormik];\n});\n\n_c = SignupPage;\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    error: auth.error,\n    signedUp: auth.signedUp\n  };\n};\n\nconst Signup = connect(mapStateToProps, {\n  signUp,\n  signIn\n})(SignupPage);\nexport { Signup };\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/pages/Signup.js"],"names":["React","useEffect","useRef","connect","Button","FormGroup","Label","Input","FormFeedback","useFormik","Link","Yup","signUp","signIn","useDidUpdate","callback","hasMount","current","SignupPage","props","isAuth","history","push","validationSchema","object","name","string","required","email","password","min","handleSubmit","formik","values","initialValues","onSubmit","resetForm","display","padding","errors","touched","handleBlur","handleChange","isValid","isSubmitting","mapStateToProps","auth","error","signedUp","Signup"],"mappings":"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","sourcesContent":["import React,{useEffect, useRef} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport { signUp, signIn } from '../actions/auth_actions'\r\n\r\n\r\nfunction useDidUpdate (callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n      if (hasMount.current) {\r\n        callback()\r\n      } else {\r\n        hasMount.current = true\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nconst SignupPage = (props) => {\r\n\r\n\r\n    useDidUpdate(()=>{\r\n        const { isAuth } = props\r\n        if (isAuth){\r\n            props.history.push('/')\r\n        }\r\n    })\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string()\r\n            .required(\"Enter your name\"),\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Enter your email\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 8 charcters\")\r\n            .required(\"Enter a password\")\r\n    })\r\n    function handleSubmit() {\r\n        props.signUp(formik.values) \r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n\r\n        onSubmit: () => {\r\n            handleSubmit()\r\n            formik.resetForm()\r\n        },\r\n        validationSchema\r\n    })\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Create a new account</h3>\r\n            <hr />\r\n\r\n            <div>\r\n                <FormGroup>\r\n                    <Label>Name</Label>\r\n                    <Input\r\n                        placeholder={'Enter your full name'}\r\n                        valid={!formik.errors.name && formik.touched.name}\r\n                        invalid={formik.errors.name && formik.touched.name}\r\n                        name='name'\r\n                        type='text'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange('name')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.name} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                        placeholder={'Enter your email'}\r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                        placeholder={'Enter a passwoord'}\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.password} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign Up </Button>\r\n                    <br />\r\n                    Have an account ? <Link to={'/login'}>Login</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n      error: auth.error,\r\n      signedUp: auth.signedUp,\r\n    };\r\n  };\r\n  \r\n  const Signup = connect(\r\n    mapStateToProps,\r\n    { signUp, signIn }\r\n  )(SignupPage);\r\n  export { Signup };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ahmed/Documents/mern-expense-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ahmed/Documents/mern-expense-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{EXPENSE_SAVED,EXPENSE_UPDATED,FETCHED_FAILED,FETCHED_SUCCESS,FETCHING_EXPENSE,RESET_SAVED}from'./types';import{addErrorMessage,clearErrorMessages}from'./error_actions';import{apiFetchExpense,apiSaveExpense,apiUpdateExpense,apiDeleteExpense}from'../api/expense';export var saveExpense=function saveExpense(expense){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(clearErrorMessages());_context.next=4;return apiSaveExpense(expense);case 4:dispatch({type:EXPENSE_SAVED});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch(addErrorMessage(_context.t0));case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var fetchExpense=function fetchExpense(month){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var prefix,url,_yield$apiFetchExpens,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;prefix='/expense';url=month>-1?\"\".concat(prefix,\"/\").concat(month):prefix;dispatch({type:FETCHING_EXPENSE});_context2.next=6;return apiFetchExpense(url);case 6:_yield$apiFetchExpens=_context2.sent;data=_yield$apiFetchExpens.data;dispatch({type:FETCHED_SUCCESS,payload:data});_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);dispatch({type:FETCHED_FAILED});dispatch(addErrorMessage(_context2.t0));case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateExpense=function updateExpense(expense){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch(clearErrorMessages());_context3.next=4;return apiUpdateExpense(expense);case 4:dispatch({type:EXPENSE_UPDATED});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);dispatch(addErrorMessage(_context3.t0));case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var deleteExpense=function deleteExpense(expenseId){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch(clearErrorMessages());_context4.next=4;return apiDeleteExpense(expenseId);case 4:dispatch(fetchExpense());_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch(addErrorMessage(_context4.t0));case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var resetSaved=function resetSaved(){return{type:RESET_SAVED};};","map":{"version":3,"sources":["C:/Users/ahmed/Documents/mern-expense-app/client/src/actions/expense_actions.js"],"names":["EXPENSE_SAVED","EXPENSE_UPDATED","FETCHED_FAILED","FETCHED_SUCCESS","FETCHING_EXPENSE","RESET_SAVED","addErrorMessage","clearErrorMessages","apiFetchExpense","apiSaveExpense","apiUpdateExpense","apiDeleteExpense","saveExpense","expense","dispatch","type","fetchExpense","month","prefix","url","data","payload","updateExpense","deleteExpense","expenseId","resetSaved"],"mappings":"2UAAA,OAASA,aAAT,CAAwBC,eAAxB,CAAyCC,cAAzC,CAAyDC,eAAzD,CAA0EC,gBAA1E,CAA4FC,WAA5F,KAA+G,SAA/G,CACA,OAASC,eAAT,CAA0BC,kBAA1B,KAAoD,iBAApD,CACA,OAASC,eAAT,CAA0BC,cAA1B,CAA0CC,gBAA1C,CAA4DC,gBAA5D,KAAoF,gBAApF,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,OAAO,CAAI,CAClC,+FAAO,iBAAMC,QAAN,kIAECA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR,CAFD,sBAGOE,CAAAA,cAAc,CAACI,OAAD,CAHrB,QAICC,QAAQ,CAAC,CAAEC,IAAI,CAAEf,aAAR,CAAD,CAAR,CAJD,+EAMCc,QAAQ,CAACR,eAAe,aAAhB,CAAR,CAND,oEAAP,+DASH,CAVM,CAYP,MAAO,IAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACnC,gGAAO,kBAAMH,QAAN,iLAEOI,MAFP,CAEgB,UAFhB,CAGOC,GAHP,CAGcF,KAAK,CAAC,CAAC,CAAP,WAAaC,MAAb,aAAuBD,KAAvB,EAAgCC,MAH9C,CAICJ,QAAQ,CAAC,CAAEC,IAAI,CAAEX,gBAAR,CAAD,CAAR,CAJD,uBAKwBI,CAAAA,eAAe,CAACW,GAAD,CALvC,6CAKSC,IALT,uBAKSA,IALT,CAMCN,QAAQ,CAAC,CAAEC,IAAI,CAAEZ,eAAR,CAAyBkB,OAAO,CAAED,IAAlC,CAAD,CAAR,CAND,qFAQCN,QAAQ,CAAC,CAACC,IAAI,CAAEb,cAAP,CAAD,CAAR,CACAY,QAAQ,CAACR,eAAe,cAAhB,CAAR,CATD,uEAAP,iEAYH,CAbM,CAeP,MAAO,IAAMgB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAT,OAAO,CAAI,CACpC,gGAAO,kBAAMC,QAAN,uIAECA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR,CAFD,uBAGOG,CAAAA,gBAAgB,CAACG,OAAD,CAHvB,QAICC,QAAQ,CAAC,CAAEC,IAAI,CAAEd,eAAR,CAAD,CAAR,CAJD,mFAMCa,QAAQ,CAACR,eAAe,cAAhB,CAAR,CAND,sEAAP,iEASH,CAVM,CAYP,MAAO,IAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,SAAS,CAAI,CACtC,gGAAO,kBAAMV,QAAN,uIAECA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR,CAFD,uBAGOI,CAAAA,gBAAgB,CAACa,SAAD,CAHvB,QAICV,QAAQ,CAACE,YAAY,EAAb,CAAR,CAJD,mFAMCF,QAAQ,CAACR,eAAe,cAAhB,CAAR,CAND,sEAAP,iEASH,CAVM,CAaP,MAAO,IAAMmB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAO,CAAEV,IAAI,CAAEV,WAAR,CAAP,EAAnB","sourcesContent":["import { EXPENSE_SAVED, EXPENSE_UPDATED, FETCHED_FAILED, FETCHED_SUCCESS, FETCHING_EXPENSE, RESET_SAVED } from './types'\r\nimport { addErrorMessage, clearErrorMessages } from './error_actions'\r\nimport { apiFetchExpense, apiSaveExpense, apiUpdateExpense, apiDeleteExpense } from '../api/expense'\r\n\r\nexport const saveExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiSaveExpense(expense)\r\n            dispatch({ type: EXPENSE_SAVED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchExpense = (month) => {\r\n    return async dispatch => {\r\n        try {\r\n            const prefix = '/expense'\r\n            const url = (month>-1 ?`${prefix}/${month}`: prefix  )\r\n            dispatch({ type: FETCHING_EXPENSE });\r\n            const { data } = await apiFetchExpense(url)\r\n            dispatch({ type: FETCHED_SUCCESS, payload: data })\r\n        } catch (e) {\r\n            dispatch({type: FETCHED_FAILED})\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiUpdateExpense(expense)\r\n            dispatch({ type: EXPENSE_UPDATED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteExpense = expenseId => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiDeleteExpense(expenseId)\r\n            dispatch(fetchExpense())\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const resetSaved = () => ({ type: RESET_SAVED });\r\n"]},"metadata":{},"sourceType":"module"}
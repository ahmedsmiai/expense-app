{"version":3,"sources":["reportWebVitals.js","actions/types.js","api/user.js","api/setAuthHeader.js","actions/auth_actions.js","actions/error_actions.js","api/expense.js","actions/expense_actions.js","components/NavBar.js","components/ProtectedRoute.js","components/FloatButton.js","components/AddForm.js","components/ErrorMessage.js","components/Spinner.js","components/ExpenseItem.js","components/MonthSelector.js","components/FormBody.js","components/Statistics.js","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Edit.js","App.js","reducers/auth_reducer.js","reducers/expense_reducer.js","reducers/error_reducer.js","reducers/index.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AUTH_ATTEMPTING","AUTH_SUCCESS","AUTH_FAILED","USER_LOGOUT","PROFILE_FETCHED","ADD_ERROR","CLEAR_ERRORS","EXPENSE_SAVED","EXPENSE_UPDATED","RESET_SAVED","FETCHING_EXPENSE","FETCHED_SUCCESS","FETCHED_FAILED","apiLogin","request_data","axios","post","setHeader","token","defaults","headers","common","TOKEN_NAME","getProfile","dispatch","a","get","user","data","type","payload","console","error","success","localStorage","setItem","addErrorMessage","e","response","clearErrorMessages","apiSaveExpense","expense","apiUpdateExpense","put","_id","apiDeleteExpense","expenseId","delete","apiFetchExpense","url","fetchExpense","month","prefix","resetSaved","NavBar","connect","auth","isAuth","profile","logOut","clear","props","useState","isOpen","setIsOpen","dropDownOpen","setDropDownOpen","toggleButton","Navbar","className","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","ButtonDropdown","toggle","DropdownToggle","caret","size","name","DropdownMenu","DropdownItem","NavItem","NavLink","renderLoginorLogout","ProtectedRoute","Component","component","rest","render","to","FloatButton","style","position","bottom","right","cursor","borderRadius","width","height","background","display","flex","justifyContent","alignItems","boxShadow","AddForm","errors","saved","message","saveExpense","modal","setModal","formRef","useRef","callback","hasMount","useEffect","current","useDidUpdate","setSubmitting","selected","resetForm","Modal","ModalHeader","ModalBody","FormBody","onSubmit","values","ErrorMessage","Alert","Spinner","spinnerSize","marginTop","fontSize","ExpenseItem","item","onDelete","ListGroupItem","marginRight","description","Badge","amount","moment","created","format","pathname","state","Button","MONTHS","months","MonthSelector","onSelectMonth","marginBottom","value","onChange","target","map","index","btnTxt","undefined","now","initialValues","innerRef","validationSchema","Yup","shape","min","required","touched","handleBlur","handleChange","isValid","isSubmitting","handleSubmit","FormGroup","Label","Input","invalid","placeholder","onBlur","FormFeedback","disabled","Statistics","total","avg","max","Home","fetching","statistics","deleteExpense","setSelected","expId","attributes","getNamedItem","length","ListGroup","Login","attempting","signIn","setAuthHeader","history","push","email","password","formik","useFormik","padding","renderError","valid","Signup","Edit","updated","updateExpense","isInitialMount","location","App","Container","path","exact","initialState","combineReducers","midllewares","thunk","storeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","store","getItem","log","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3794884a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const AUTH_ATTEMPTING = 'AUTH_ATTEMPTING'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAILED = 'AUTH_FAILED'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const PROFILE_FETCHED = 'PROFILE_FETCHED'\r\n\r\nexport const ADD_ERROR='ADD_ERROR'\r\nexport const CLEAR_ERRORS='CLEAR_ERRORS'\r\n\r\nexport const EXPENSE_SAVED = 'EXPENSE_SAVED'\r\nexport const EXPENSE_UPDATED = 'EXPENSE_UPDATED' \r\nexport const RESET_SAVED = 'RESET_SAVED'  \r\n\r\n\r\nexport const FETCHING_EXPENSE = 'FETCHING_EXPENSE'  \r\nexport const FETCHED_SUCCESS = 'FETCHED_SUCCESS'  \r\nexport const FETCHED_FAILED = 'FETCHED_FAILED'  \r\n\r\n\r\n","import axios from 'axios'\r\n\r\nexport const apiLogin = (request_data) => {\r\n    return axios.post('/api/v1/login', request_data)\r\n}\r\n\r\nexport const fetchProfile = (token) => {\r\n    return axios.get('/api/v1/me')\r\n}","import axios from 'axios'\r\n\r\nexport default function setHeader (token)  {\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization']\r\n    }\r\n}","import { AUTH_FAILED, AUTH_SUCCESS, AUTH_ATTEMPTING, USER_LOGOUT, PROFILE_FETCHED } from './types'\r\nimport { apiLogin, fetchProfile } from '../api/user';\r\nimport setAuthHeader from '../api/setAuthHeader';\r\n\r\nconst TOKEN_NAME = 'expense_app_token';\r\nexport const signIn = request_data => {\r\n    return async dispatch => {\r\n        dispatch({ type: AUTH_ATTEMPTING })\r\n        try {\r\n            const { data } = await apiLogin(request_data)\r\n            setAuthHeader(data.token)\r\n            dispatch(getProfile());\r\n            dispatch(success(data.token))\r\n        } catch (e) {\r\n            const { response: { data } } = e\r\n            dispatch(error(data.error))\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const onLoadingSignIn = () => {\r\n    return dispatch => {\r\n        try {\r\n            const token = localStorage.getItem(TOKEN_NAME);\r\n            if (token === null || token === 'undefined') {\r\n                return dispatch(error('You need to login'));\r\n            }\r\n            setAuthHeader(token)\r\n            dispatch(getProfile())\r\n            dispatch(success(token))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getProfile = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data: { user } } = await fetchProfile()\r\n            dispatch({type:PROFILE_FETCHED, payload: user})\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const logOut = () => {\r\n    localStorage.clear()\r\n    return ({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\n\r\nconst success = (token) => {\r\n    localStorage.setItem(TOKEN_NAME, token)\r\n    return { type: AUTH_SUCCESS }\r\n};\r\nconst error = (error) => {\r\n    return { type: AUTH_FAILED, payload: error }\r\n};","import { ADD_ERROR, CLEAR_ERRORS } from './types'\r\n\r\nexport const addErrorMessage = e => {\r\n    const { response: { data: { error } } } = e\r\n    return { type: ADD_ERROR, payload: error }\r\n\r\n}\r\n\r\nexport const clearErrorMessages = e => {\r\n    return { type: CLEAR_ERRORS }\r\n}","import axios from 'axios'\r\n\r\nexport const apiSaveExpense = expense => {\r\n    return axios.post('/api/v1/expense', expense);\r\n}\r\n\r\nexport const apiUpdateExpense = expense => {\r\n    return axios.put(`/api/v1/expense/${expense._id}`, expense)\r\n}\r\n\r\nexport const apiDeleteExpense = expenseId => {\r\n    return axios.delete(`/api/v1/expense/${expenseId}`)\r\n}\r\n\r\nexport const apiFetchExpense = (url) => {\r\n    return axios.get(url)\r\n}","import { EXPENSE_SAVED, EXPENSE_UPDATED, FETCHED_FAILED, FETCHED_SUCCESS, FETCHING_EXPENSE, RESET_SAVED } from './types'\r\nimport { addErrorMessage, clearErrorMessages } from './error_actions'\r\nimport { apiFetchExpense, apiSaveExpense, apiUpdateExpense, apiDeleteExpense } from '../api/expense'\r\n\r\nexport const saveExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiSaveExpense(expense)\r\n            dispatch({ type: EXPENSE_SAVED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchExpense = (month) => {\r\n    return async dispatch => {\r\n        try {\r\n            const prefix = '/api/v1/expense'\r\n            const url = (month>-1 ?`${prefix}/${month}`: prefix  )\r\n            dispatch({ type: FETCHING_EXPENSE });\r\n            const { data } = await apiFetchExpense(url)\r\n            dispatch({ type: FETCHED_SUCCESS, payload: data })\r\n        } catch (e) {\r\n            dispatch({type: FETCHED_FAILED})\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateExpense = expense => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiUpdateExpense(expense)\r\n            dispatch({ type: EXPENSE_UPDATED })\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteExpense = expenseId => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(clearErrorMessages())\r\n            await apiDeleteExpense(expenseId)\r\n            dispatch(fetchExpense())\r\n        } catch (e) {\r\n            dispatch(addErrorMessage(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const resetSaved = () => ({ type: RESET_SAVED });\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap';\r\nimport { logOut } from '../actions'\r\n\r\nconst NavBarComponent = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [dropDownOpen, setDropDownOpen] = useState(false)\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const toggleButton = () => setDropDownOpen(!dropDownOpen)\r\n\r\n    function renderLoginorLogout() {\r\n        const { isAuth, logOut, profile } = props\r\n        if (isAuth) {\r\n            return (\r\n                <ButtonDropdown isOpen={dropDownOpen} toggle={toggleButton}>\r\n                    <DropdownToggle caret size='sm'>\r\n                        Welcome {profile.name}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => logOut()}>Logout</DropdownItem>\r\n                    </DropdownMenu>\r\n                </ButtonDropdown>\r\n            )\r\n        }\r\n        return (\r\n            <NavItem>\r\n                <NavLink href=\"/login\">Login</NavLink>\r\n            </NavItem>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar className='px-5 py-2'  color=\"dark\" dark expand=\"md\">\r\n                <NavbarBrand href=\"/\">MERN expense</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"ms-auto\" navbar>\r\n                        {renderLoginorLogout()}\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        isAuth: auth.isAuth,\r\n        profile: auth.profile,\r\n\r\n    }\r\n}\r\nconst NavBar = connect(mapStateToProps, { logOut })(NavBarComponent)\r\nexport { NavBar };","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction ProtectedRouteComponent({ isAuth, component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => isAuth ? <Component {...props} /> : <Redirect to='/login' />}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        isAuth: auth.isAuth\r\n    }\r\n}\r\n\r\nconst ProtectedRoute = connect(mapStateToProps)(ProtectedRouteComponent)\r\nexport { ProtectedRoute }","import React from 'react'\r\n\r\nfunction FloatButton({ onClick }) {\r\n\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: 40,\r\n            right: 40,\r\n            cursor: 'pointer'\r\n        }}>\r\n            <div style={{\r\n                borderRadius: 50,\r\n                width: 60,\r\n                height: 60,\r\n                background: \"#3972F5\",\r\n                display: 'flex',\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                color: '#fff',\r\n                boxShadow: '2px 2px 3px #999'\r\n            }}\r\n                onClick={onClick}\r\n            >\r\n                <i className='fa fa-plus' />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport { FloatButton }","import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\nimport { saveExpense, resetSaved, fetchExpense } from '../actions'\r\nimport { FloatButton, FormBody } from '../components';\r\n\r\n\r\nfunction useDidUpdate(callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n        if (hasMount.current) {\r\n            callback()\r\n        } else {\r\n            hasMount.current = true\r\n        }\r\n    })\r\n}\r\n\r\nfunction AddFormComponent(props) {\r\n\r\n    const [modal, setModal] = useState(false)\r\n    const formRef = useRef()\r\n\r\n    useDidUpdate(() => {\r\n        const { saved, error, resetSaved, fetchExpense } = props\r\n        if (error) {\r\n            formRef.current.setSubmitting(false)\r\n        }\r\n        if (saved && modal) {\r\n            toggle()\r\n            fetchExpense(props.selected)\r\n            resetSaved()\r\n            formRef.current.resetForm()\r\n\r\n        }\r\n    })\r\n    function submit(values) {\r\n        props.saveExpense(values)\r\n    }\r\n\r\n    const toggle = () => setModal(!modal)\r\n    return (\r\n        <div>\r\n            <FloatButton onClick={toggle} />\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Add expense</ModalHeader>\r\n                <ModalBody>\r\n                <FormBody onSubmit={submit} formRef={formRef}/>\r\n                   \r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = ({ expense, errors }) => {\r\n    return {\r\n        saved: expense.saved,\r\n        error: errors.message\r\n    }\r\n}\r\n\r\nconst AddForm = connect(mapStateToProps, \r\n    { saveExpense, resetSaved, fetchExpense })(AddFormComponent)\r\nexport { AddForm }","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Alert } from 'reactstrap'\r\n\r\nfunction ErrorMessageComponent({ message }) {\r\n    if (message) {\r\n        return (\r\n            <Alert color='danger' >\r\n                {message}\r\n            </Alert>\r\n        )\r\n    }\r\n    return <></>; \r\n}\r\n\r\nconst mapStateToProps = ({ errors }) => {\r\n    return {\r\n        message: errors.message\r\n    }\r\n}\r\n\r\nconst ErrorMessage = connect(mapStateToProps)(ErrorMessageComponent)\r\nexport { ErrorMessage }\r\n","import React from 'react'\r\n\r\nfunction Spinner({ size }) {\r\n    let spinnerSize = size ? size : 30\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flex: 1,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginTop: 30\r\n            }}>\r\n            <i className=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" style={{ fontSize: spinnerSize }}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Spinner }\r\n","import React from 'react'\r\nimport { ListGroupItem, Badge, Button } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nfunction ExpenseItem({ item, onDelete }) {\r\n    return (\r\n        <ListGroupItem>\r\n            <div className=\"float-start\">\r\n                <span style={{ marginRight: 8 }}>{item.description ? item.description : 'No available description'}</span>\r\n                <Badge className=\"bg-secondary\">$ {item.amount}</Badge>\r\n                <div className='text-muted'>\r\n                    {moment(item.created).format('LL')}\r\n                </div>\r\n            </div>\r\n            <div className=\"float-end\">\r\n                <Link to={{\r\n                    pathname: '/edit',\r\n                    state: { item } \r\n                }}\r\n                className='btn btn-secondary btn-sm'>\r\n                    Edit\r\n                </Link>\r\n                &nbsp;\r\n                <Button className='btn btn-danger btn-sm' onClick={onDelete} data-id={item._id}>\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n        </ListGroupItem>\r\n    )\r\n}\r\n\r\nexport { ExpenseItem }\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst MONTHS = moment.months()\r\n\r\nfunction MonthSelector(props) {\r\n    const { onSelectMonth } = props\r\n\r\n    function handleChange(e) {\r\n        var selected = e.target.value\r\n        onSelectMonth(selected)\r\n    }\r\n    return (\r\n        <div style={{ marginBottom: 20 }}>\r\n            <span>Select month </span>\r\n            <select value={props.selected} onChange={handleChange}>\r\n                {MONTHS.map((month, index) => {\r\n                    return (<option value={index} key={index}> {month} </option>)\r\n                }\r\n                )}\r\n\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { MonthSelector }","import React from 'react'\r\nimport { Button, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { Formik } from 'formik'\r\nimport moment from 'moment'\r\nimport * as Yup from 'yup'\r\nimport { ErrorMessage } from '../components';\r\n\r\n\r\n\r\nfunction FormBody({ btnTxt = 'Save', onSubmit, formRef, expense={} }) {\r\n    const {\r\n        description = '',\r\n        amount = '',\r\n        created = undefined\r\n    } = expense\r\n    const now = created ? \r\n    moment(created).format('YYYY-MM-DD') \r\n    : moment().format('YYYY-MM-DD')\r\n    return (\r\n        <Formik\r\n            initialValues={{ amount, created:now, description }}\r\n            innerRef={formRef}\r\n            onSubmit={onSubmit}\r\n            validationSchema={Yup.object().shape({\r\n                description: Yup.string().min(3),\r\n                amount: Yup.number().min(1).required(),\r\n                created: Yup.date().required(),\r\n            })}\r\n        >\r\n\r\n            {({ errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n                values,\r\n                isValid,\r\n                isSubmitting,\r\n                handleSubmit\r\n            }) => (\r\n                <div>\r\n                    <ErrorMessage />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Description\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.description && touched.description}\r\n                            name='description'\r\n                            value={values.description}\r\n                            type='text'\r\n                            placeholder='Description'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.description && touched.description && (\r\n                            <FormFeedback>{errors.description}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Amount\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.amount && touched.amount}\r\n                            name='amount'\r\n                            value={values.amount}\r\n                            type='number'\r\n                            placeholder='Expense amount'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.amount && touched.amount && (\r\n                            <FormFeedback>{errors.amount}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <FormGroup>\r\n                        <Label>\r\n                            Date\r\n                        </Label>\r\n                        <Input\r\n                            invalid={errors.created && touched.created}\r\n                            name='created'\r\n                            value={values.created}\r\n                            type='date'\r\n                            placeholder='expense amount'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.created && touched.created && (\r\n                            <FormFeedback>{errors.created}</FormFeedback>\r\n                        )}\r\n                    </FormGroup>\r\n                    <br />\r\n                    <Button color=\"primary\" onClick={handleSubmit} disabled={!isValid || isSubmitting} > {btnTxt} </Button>\r\n                </div>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n}\r\nexport { FormBody }\r\n","import React from 'react';\r\nimport { Button, Badge } from 'reactstrap';\r\n\r\nconst Statistics = ({ data }) => {\r\n  return (\r\n    <div>\r\n      {data.total && (\r\n        <div\r\n          style={{ display: 'flex', justifyContent: 'space-between', flex: 1 }}\r\n        >\r\n          <Button color=\"dark\">\r\n            Total <Badge color=\"light\">{data.total} $</Badge>\r\n          </Button>\r\n          <Button color=\"success\">\r\n            Average <Badge color=\"light\">{data.avg} $</Badge>\r\n          </Button>\r\n          <Button color=\"danger\">\r\n            Max <Badge color=\"light\">{data.max} $</Badge>\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Statistics };","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ListGroup, Alert } from 'reactstrap';\r\nimport { fetchExpense, deleteExpense } from '../actions/expense_actions'\r\nimport { AddForm, ExpenseItem, MonthSelector, Spinner,Statistics } from '../components'\r\nimport moment from 'moment';\r\n\r\nfunction HomeC(props) {\r\n\r\n    const [selected, setSelected] = useState(moment().month())\r\n\r\n    useEffect(() => {\r\n        const { fetchExpense } = props\r\n        fetchExpense(selected)\r\n    }, [selected])\r\n\r\n    const { fetching, expense, statistics } = props\r\n\r\n    function onSelectMonth(month) {\r\n        setSelected(month)\r\n    }\r\n    function onDelete(e) {\r\n        const expId = e.target.attributes.getNamedItem('data-id').value\r\n        props.deleteExpense(expId)\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: 30 }}>\r\n            <MonthSelector\r\n                selected={selected}\r\n                onSelectMonth={onSelectMonth}\r\n            />\r\n            <h3>Expense List</h3>\r\n            <hr />\r\n            {fetching ? (<Spinner />) :\r\n                (\r\n\r\n                    expense.length > 0 ? (\r\n                        <div>\r\n                            <Statistics data={statistics} />\r\n                            <hr />\r\n                            <ListGroup> {expense.map((item) => (\r\n                                <ExpenseItem key={item._id} item={item} onDelete={onDelete} />\r\n                            ))}\r\n                            </ListGroup>\r\n                        </div>\r\n                    ) :\r\n                        (<div >\r\n                            <Alert style={{ display: 'flex', justifyContent: 'center' }} color=\"secondary\">\r\n                                No saved expenses for this month\r\n                            </Alert>\r\n                        </div>)\r\n                )}\r\n            <AddForm selected={selected} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({ expense }) => {\r\n    return {\r\n        fetching: expense.fetching,\r\n        expense: expense.expense,\r\n        statistics: expense.statistics\r\n\r\n    }\r\n}\r\n\r\nconst Home = connect(mapStateToProps, { deleteExpense, fetchExpense })(HomeC)\r\nexport { Home };","import React, { useEffect, useRef } from 'react'\r\n\r\nimport { Button, FormGroup, Label, Input, FormFeedback, Alert } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport { signIn } from '../actions'\r\n\r\nfunction useDidUpdate (callback) {\r\n    const hasMount = useRef(false)\r\n    useEffect(() => {\r\n      if (hasMount.current) {\r\n        callback()\r\n      } else {\r\n        hasMount.current = true\r\n      }\r\n    })\r\n  }\r\n\r\nfunction LoginPage(props) {\r\n\r\n\r\n    useDidUpdate(()=>{\r\n        const { isAuth } = props\r\n        if (isAuth){\r\n            props.history.push('/')\r\n        }\r\n    })\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Email is required\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 8 charcters\")\r\n            .required(\"Enter your password\")\r\n    })\r\n\r\n    function handleSubmit() {\r\n        props.signIn(formik.values) \r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        onSubmit: () => {\r\n            handleSubmit()\r\n            formik.resetForm()\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const renderError = () => {\r\n        const { error } = props\r\n        if (error) {\r\n            return (\r\n                <Alert color=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Sign in to your account</h3>\r\n            <hr />\r\n            {renderError()}\r\n            <div>\r\n                <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.password} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign In\r\n                    </Button>\r\n                    <br />\r\n                    Do not have an account ? <Link to={'/signup'}>Sign up here</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        attempting: auth.attempting,\r\n        error: auth.error,\r\n        isAuth: auth.isAuth\r\n    }\r\n}\r\nconst Login = connect(mapStateToProps, { signIn })(LoginPage)\r\nexport { Login }\r\n","import React from 'react'\r\nimport { Button, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\r\nimport { useFormik } from 'formik';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\nconst Signup = () => {\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string()\r\n            .required(\"Enter your name\"),\r\n        email: Yup.string()\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Enter your email\"),\r\n        password: Yup.string()\r\n            .min(6, \"Password must contain at least 8 charcters\")\r\n            .required(\"Enter a password\")\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name:\"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        onSubmit: () => {\r\n            formik.resetForm()\r\n        },\r\n        validationSchema\r\n    })\r\n    return (\r\n        <div style={{ display: 'block', padding: 20 }}>\r\n            <h3>Create a new account</h3>\r\n            <hr />\r\n\r\n            <div>\r\n                <FormGroup>\r\n                    <Label>Name</Label>\r\n                    <Input\r\n                        placeholder={'Enter your full name'}\r\n                        valid={!formik.errors.name && formik.touched.name}\r\n                        invalid={formik.errors.name && formik.touched.name}\r\n                        name='name'\r\n                        type='text'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange('name')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.name} </FormFeedback>\r\n                </FormGroup>\r\n                <br/>\r\n                <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                    placeholder={'Enter your email'}\r\n                        valid={!formik.errors.email && formik.touched.email}\r\n                        invalid={formik.errors.email && formik.touched.email}\r\n                        name='email'\r\n                        type='email'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange('email')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.email} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                    placeholder={'Enter a passwoord'}\r\n                        valid={!formik.errors.password && formik.touched.password}\r\n                        invalid={formik.errors.password && formik.touched.password}\r\n                        name='password'\r\n                        type='password'\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange('password')}\r\n                    />\r\n                    <FormFeedback>{formik.errors.password} </FormFeedback>\r\n                </FormGroup>\r\n                <br />\r\n                <div className='text-center'>\r\n                    <Button\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                    > Sign Up </Button>\r\n                    <br/>\r\n                Have an account ? <Link to={'/login'}>Login</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport { Signup }\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { FormBody } from '../components'\r\nimport { connect } from 'react-redux'\r\nimport { updateExpense, resetSaved } from '../actions/expense_actions'\r\n\r\n\r\nfunction EditComponent(props) {\r\n\r\n    const isInitialMount = useRef(true);\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            const { updated, resetSaved } = props\r\n            if (updated) {\r\n                resetSaved();\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    });\r\n\r\n    function submit(values) {\r\n        const item = props.location.state.item\r\n        values._id = item._id\r\n        props.updateExpense(values)\r\n    }\r\n\r\n    let item\r\n    try {\r\n        item = props.location.state.item\r\n    } catch (e) {\r\n        item = undefined\r\n    }\r\n\r\n    if (!item) props.history.push('/')\r\n\r\n    return (\r\n        <div style={{ marginTop: 20 }}>\r\n            <h3>Edit expense</h3>\r\n            <hr />\r\n            <FormBody\r\n                onSubmit={submit}\r\n                btnTxt='Update'\r\n                expense={item}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ expense }) => {\r\n    return {\r\n        updated: expense.updated\r\n    };\r\n};\r\n\r\n\r\nconst Edit = connect(mapStateToProps, { resetSaved, updateExpense })(EditComponent)\r\nexport { Edit }\r\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { NavBar, ProtectedRoute } from './components'\nimport { Login, Home, Signup, Edit } from './pages'\nimport { Container } from 'reactstrap'\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <Switch>\n          <ProtectedRoute path=\"/\" component={Home} exact />\n          <ProtectedRoute path =\"/edit\" component={Edit} exact />\n        </Switch>\n          <Route path=\"/Signup\" component={Signup} exact />\n          <Route path=\"/Login\" component={Login} exact />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { AUTH_ATTEMPTING, AUTH_FAILED, AUTH_SUCCESS, PROFILE_FETCHED, USER_LOGOUT } from '../actions/types'\r\n\r\nconst initialState = {\r\n    attempting: false,\r\n    isAuth: false,\r\n    profile: {},\r\n    error: null\r\n}\r\n\r\nexport default function x (state = initialState, { type, payload })  {\r\n    switch (type) {\r\n\r\n        case AUTH_ATTEMPTING:\r\n            return {\r\n                ...state,\r\n                attempting: true,\r\n                isAuth: false,\r\n                error: null\r\n            }\r\n\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                attempting: false,\r\n                isAuth: true,\r\n                profile: {},\r\n                error: null\r\n            }\r\n\r\n        case AUTH_FAILED:\r\n            return {\r\n                ...state,\r\n                attempting: false,\r\n                isAuth: false,\r\n                error: payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                profile: {}\r\n            }\r\n        case PROFILE_FETCHED:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    EXPENSE_SAVED,\r\n    RESET_SAVED,\r\n    FETCHED_FAILED,\r\n    FETCHED_SUCCESS,\r\n    FETCHING_EXPENSE,\r\n    EXPENSE_UPDATED\r\n} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    saved: false,\r\n    updated: false,\r\n    fetching: false,\r\n    expense: [], \r\n    statistics: {}\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case EXPENSE_SAVED:\r\n            return { ...state, saved: true }\r\n        case FETCHING_EXPENSE:\r\n            return { ...state, fetching: true }\r\n        case FETCHED_SUCCESS:\r\n            const { expense, statistics } = payload \r\n            return { ...state, fetching: false, expense, statistics }\r\n        case FETCHED_FAILED:\r\n            return { ...state, fetching: false }\r\n        case RESET_SAVED:\r\n            return { ...state, saved: false, updated: false }\r\n        case EXPENSE_UPDATED:\r\n            return { ...state, updated: true }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { CLEAR_ERRORS, ADD_ERROR } from '../actions/types'\r\n\r\nconst initialState = {\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case ADD_ERROR:\r\n            return { ...state, message: payload }\r\n\r\n        case CLEAR_ERRORS:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport auth from './auth_reducer'\r\nimport expense from './expense_reducer'\r\nimport errors from './error_reducer'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    expense,\r\n    errors\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers'\r\n\r\nconst midllewares = [thunk]\r\nconst storeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport default createStore(reducers, {}, storeEnhancer(applyMiddleware(...midllewares)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\nimport store from './store/'\nimport { onLoadingSignIn } from './actions'\n\n\nstore.dispatch(onLoadingSignIn());\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}